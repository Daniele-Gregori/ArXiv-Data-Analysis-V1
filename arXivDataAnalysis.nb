(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    378371,       6739]
NotebookOptionsPosition[    376081,       6690]
NotebookOutlinePosition[    376544,       6707]
CellTagsIndexPosition[    376501,       6704]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["arXiv data analysis", "Title",
 CellChangeTimes->{{3.905166651948729*^9, 
  3.905166659435957*^9}},ExpressionUUID->"dbfc701f-0998-49af-b12b-\
d3b30df1fa1d"],

Cell["Daniele Gregori", "Author",
 CellChangeTimes->{{3.9051666683068*^9, 
  3.905166671223051*^9}},ExpressionUUID->"72034f4a-dd92-428f-8a05-\
aa82107ed731"],

Cell[CellGroupData[{

Cell["Category hep-th, years 2017-2023", "Section",
 CellChangeTimes->{{3.905096474329481*^9, 3.9050964805404053`*^9}, {
  3.9051331835053663`*^9, 3.905133187440323*^9}, {3.9051386695624733`*^9, 
  3.905138787766597*^9}},ExpressionUUID->"73579128-63c0-4c61-8794-\
cf9b6f63d9b6"],

Cell[CellGroupData[{

Cell["Data wrangling ", "Subsection",
 CellChangeTimes->{{3.90516668623144*^9, 
  3.9051667004057302`*^9}},ExpressionUUID->"e72c69e5-9a39-4d9c-857e-\
a707504e5398"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataImportFun", "[", 
   RowBox[{"n_Integer", ",", "m_Integer"}], "]"}], ":=", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<ArXiv Python/\>\"",
         ",", 
        RowBox[{"\"\<arXiv_hepth_\>\"", "<>", 
         RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "m", "]"}], "<>", "\"\<.txt\>\""}]}], "}"}],
       "]"}], ",", "\"\<Data\>\""}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"dataList", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"listbreaks", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1000", ",", "15000", ",", "2000"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"16000", ",", "24000", ",", "1000"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"24500", ",", "27000", ",", "500"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"28000", ",", "31000", ",", "1000"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"33000", ",", "37000", ",", "2000"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"38000", ",", "40000", ",", "1000"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"42000", ",", "43000"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"dataImportFun", "[", 
        RowBox[{
         RowBox[{"listbreaks", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"listbreaks", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "listbreaks", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.905136504584461*^9, 3.905136534106011*^9}, 
   3.9051382686636353`*^9, 3.905142374230638*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"262cf7df-81d2-4a65-97e6-9d80608995ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataClean", "[", "n_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", "=", 
      RowBox[{"dataList", "[", 
       RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"poss", "=", 
         RowBox[{"First", "/@", 
          RowBox[{"Position", "[", 
           RowBox[{"data", ",", 
            RowBox[{
             RowBox[{"_String", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"StringContainsQ", "[", 
                 RowBox[{"#", ",", "\"\<<feed \>\""}], "]"}], "&"}], ")"}]}], 
             "|", 
             RowBox[{"_String", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"StringContainsQ", "[", 
                 RowBox[{"#", ",", "\"\<feed>\>\""}], "]"}], "&"}], 
               ")"}]}]}]}], "]"}]}]}], ",", "datatrim", ",", "dataclean"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"datatrim", "=", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"poss", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ";;", 
           RowBox[{"poss", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
       RowBox[{"dataclean", "=", 
        RowBox[{"StringRiffle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Characters", "[", "#", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "===", "\"\<\\\\\>\""}], 
              ",", 
              RowBox[{"StringDrop", "[", 
               RowBox[{"#", ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
           "datatrim"}], ",", "\"\<\\n\>\""}], "]"}]}]}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataXML", "[", "n_", "]"}], ":=", " ", 
   RowBox[{"ImportString", "[", 
    RowBox[{
     RowBox[{"dataClean", "[", "n", "]"}], ",", " ", "\"\<XML\>\""}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"articlesData", "[", "n_", "]"}], ":=", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"dataXML", "[", "n", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<entry\>\"", ",", "__"}], "]"}]}], "]"}]}], ";"}]}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.9050969591591787`*^9, 3.905097080992773*^9}, {
   3.9051331607586*^9, 3.905133165647489*^9}, {3.905133372680108*^9, 
   3.905133527131339*^9}, {3.9051348108529778`*^9, 3.905134810888935*^9}, {
   3.905134859291354*^9, 3.90513487738799*^9}, {3.905134922375307*^9, 
   3.9051349225841208`*^9}, {3.9051349642092953`*^9, 
   3.9051350270689898`*^9}, {3.905135057615444*^9, 3.905135122560051*^9}, {
   3.90513532887888*^9, 3.905135353902013*^9}, {3.905135407358457*^9, 
   3.905135430962182*^9}, {3.905135613216818*^9, 3.905135736675494*^9}, {
   3.905135801199545*^9, 3.905135808435116*^9}, {3.905135869173826*^9, 
   3.905135879424848*^9}, {3.905136024491338*^9, 3.905136028559766*^9}, {
   3.905136105763678*^9, 3.905136137381274*^9}, {3.905136197112979*^9, 
   3.905136210818804*^9}, {3.905136988834352*^9, 3.9051369915941277`*^9}, 
   3.9051382502876*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"503dade2-531a-419b-b596-efe3a951a173"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"titles", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"articlesData", "[", "n", "]"}], ",", " ", 
        RowBox[{
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<title\>\"", ",", 
           RowBox[{"{", "}"}], ",", " ", 
           RowBox[{"{", "term_", "}"}]}], "]"}], " ", ":>", "term"}], ",", 
        " ", "Infinity"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "dataList", "]"}], "]"}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"titlesClean", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringDelete", "[", 
      RowBox[{"#", ",", "\"\<$\>\""}], "]"}], "&"}], "/@", "titles"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"datesMonths", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"articlesData", "[", "n", "]"}], ",", " ", 
        RowBox[{
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<published\>\"", ",", 
           RowBox[{"{", "}"}], ",", " ", 
           RowBox[{"{", "term_", "}"}]}], "]"}], " ", ":>", 
         RowBox[{"StringTake", "[", 
          RowBox[{"term", ",", "7"}], "]"}]}], ",", " ", "Infinity"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "dataList", "]"}], "]"}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"titlesMonths", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Riffle", "[", 
        RowBox[{"datesMonths", ",", "titlesClean"}], "]"}], ",", "2"}], "]"}],
      ",", 
     RowBox[{"First", "->", "Last"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.905134242225877*^9, 3.905134259205223*^9}, {
   3.905136222737973*^9, 3.905136226994967*^9}, {3.905137579437104*^9, 
   3.905137647553698*^9}, {3.905137710452588*^9, 3.905137712102745*^9}, 
   3.905138301253829*^9, 3.9051419865322733`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"f17af88a-2fc7-449f-a015-489561da550e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Popular word counting", "Subsection",
 CellChangeTimes->{{3.905159460574926*^9, 
  3.905159466244114*^9}},ExpressionUUID->"675c3d2d-ed1f-4662-b74a-\
a97c1a4dc65a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"popularWords", "=", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Transpose", "@", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"List", "@@@", 
            RowBox[{"Normal", "@", 
             RowBox[{"ReverseSort", "[", 
              RowBox[{"Counts", "[", 
               RowBox[{"ToLowerCase", "@", 
                RowBox[{"DeleteStopwords", "@", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"TextWords", "/@", "#"}], "]"}]}]}], "]"}], 
              "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"_", ",", 
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", ">", "10"}], "&"}], ")"}]}]}], "}"}]}], 
          "]"}]}]}], "]"}], "&"}], ",", "titlesMonths"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.905146138449853*^9, 3.9051464132275543`*^9}, {
  3.905146453537261*^9, 3.9051464878790827`*^9}, {3.905148974625787*^9, 
  3.90514897816564*^9}, {3.905150226145916*^9, 3.905150231408226*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"040548c8-a491-4f30-bb39-762a7d99aa08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"popularWords", "//", "Dataset"}]], "Input",
 CellChangeTimes->{{3.905166074836035*^9, 3.905166075991538*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"aaf10999-0f92-4081-8965-25a142383886"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "2023-09" -> <|
        "quantum" -> 64, "theory" -> 52, "black" -> 46, "gravity" -> 39, 
         "field" -> 32, "model" -> 25, "holes" -> 23, "hole" -> 23, 
         "gravitational" -> 21, "n" -> 18, "symmetry" -> 18, "scalar" -> 17, 
         "conformal" -> 16, "holographic" -> 16, "dimensions" -> 14, 
         "theories" -> 14, "effective" -> 14, "dark" -> 13, "spacetime" -> 13,
          "gauge" -> 13, "string" -> 13, "2" -> 12, "dynamics" -> 12, 
         "energy" -> 12, "symmetries" -> 12, "solutions" -> 11, "matter" -> 
         11, "fields" -> 11, "phase" -> 11|>, 
       "2023-08" -> <|
        "quantum" -> 70, "gravity" -> 59, "black" -> 50, "theory" -> 37, 
         "field" -> 33, "model" -> 30, "theories" -> 27, "holes" -> 25, 
         "hole" -> 23, "2" -> 22, "gravitational" -> 21, "holographic" -> 20, 
         "gauge" -> 19, "scalar" -> 18, "cosmology" -> 16, "scattering" -> 15,
          "new" -> 15, "fields" -> 14, "ads" -> 14, "spin" -> 14, "models" -> 
         14, "entanglement" -> 14, "n" -> 14, "effective" -> 13, "potential" -> 
         13, "string" -> 13, "dark" -> 13, "4" -> 13, "symmetry" -> 13, 
         "matter" -> 12, "via" -> 12, "action" -> 11, "waves" -> 11, "cosmic" -> 
         11|>, "2023-07" -> <|
        "black" -> 88, "quantum" -> 68, "theory" -> 65, "gravity" -> 50, 
         "holes" -> 47, "field" -> 47, "hole" -> 39, "theories" -> 34, 
         "model" -> 32, "gravitational" -> 28, "dark" -> 24, "symmetry" -> 24,
          "scalar" -> 21, "entropy" -> 21, "generalized" -> 20, "2" -> 20, 
         "entanglement" -> 20, "energy" -> 19, "models" -> 19, "holographic" -> 
         18, "string" -> 18, "n" -> 17, "symmetries" -> 17, "1" -> 16, 
         "gauge" -> 15, "uc0" -> 14, "qcd" -> 14, "ads" -> 14, "systems" -> 
         13, "conformal" -> 13, "inflation" -> 13, "scattering" -> 13, 
         "phase" -> 13, "cosmology" -> 13, "spin" -> 13, "higgs" -> 13, 
         "charged" -> 13, "effective" -> 12, "space" -> 12, "new" -> 12, 
         "spacetime" -> 12, "approach" -> 12, "cosmological" -> 12, "vacuum" -> 
         11, "anomaly" -> 11, "large" -> 11, "nanograv" -> 11, "mathcal" -> 
         11, "dimensions" -> 11, "higher" -> 11, "order" -> 11|>, 
       "2023-06" -> <|
        "quantum" -> 63, "black" -> 54, "theory" -> 52, "gravity" -> 49, 
         "model" -> 35, "holes" -> 33, "theories" -> 31, "gravitational" -> 
         30, "field" -> 29, "gauge" -> 24, "n" -> 22, "symmetry" -> 21, 
         "models" -> 21, "t" -> 20, "hole" -> 20, "conformal" -> 19, 
         "entropy" -> 18, "entanglement" -> 18, "phase" -> 17, "symmetries" -> 
         16, "space" -> 16, "string" -> 16, "matter" -> 15, "holography" -> 
         15, "holographic" -> 15, "inflation" -> 14, "dark" -> 14, 
         "generalized" -> 14, "functions" -> 13, "effective" -> 13, "scalar" -> 
         12, "2" -> 12, "1" -> 12, "s" -> 12, "finite" -> 12, "topological" -> 
         12, "yang-mills" -> 12, "spacetime" -> 11, "energy" -> 11, "3" -> 11,
          "fields" -> 11, "temperature" -> 11, "sitter" -> 11, "deformed" -> 
         11, "scattering" -> 11, "cosmic" -> 11|>, 
       "2023-05" -> <|
        "theory" -> 70, "quantum" -> 69, "black" -> 59, "gravity" -> 59, 
         "field" -> 44, "holes" -> 35, "model" -> 31, "symmetry" -> 26, 
         "theories" -> 25, "gauge" -> 25, "n" -> 23, "hole" -> 22, "dark" -> 
         22, "gravitational" -> 21, "scalar" -> 21, "matter" -> 21, "t" -> 20,
          "energy" -> 18, "phase" -> 17, "uc0" -> 17, "ads" -> 16, "space" -> 
         16, "symmetries" -> 16, "dynamics" -> 15, "scattering" -> 15, 
         "vacuum" -> 14, "inflation" -> 14, "models" -> 14, "string" -> 14, 
         "effective" -> 14, "holographic" -> 14, "conformal" -> 13, "2" -> 13,
          "topological" -> 13, "spacetime" -> 13, "1" -> 12, "states" -> 12, 
         "entropy" -> 12, "chiral" -> 12, "sitter" -> 12, "fields" -> 11, 
         "entanglement" -> 11, "generalized" -> 11, "duality" -> 11, 
         "cosmological" -> 11, "thermodynamics" -> 11|>, 
       "2023-04" -> <|
        "black" -> 65, "quantum" -> 53, "gravity" -> 43, "theory" -> 41, 
         "holes" -> 33, "gauge" -> 32, "theories" -> 30, "field" -> 29, 
         "hole" -> 29, "model" -> 28, "holographic" -> 24, "symmetry" -> 22, 
         "fields" -> 20, "symmetries" -> 20, "n" -> 20, "space" -> 19, 
         "scalar" -> 19, "gravitational" -> 18, "uc0" -> 17, "generalized" -> 
         14, "dimensions" -> 14, "cosmological" -> 14, "higher" -> 14, 
         "boundary" -> 14, "cosmology" -> 14, "states" -> 13, "ads" -> 13, 
         "inflation" -> 13, "solutions" -> 12, "topological" -> 12, "entropy" -> 
         12, "phase" -> 12, "1" -> 12, "systems" -> 12, "dark" -> 11, 
         "dynamics" -> 11, "t" -> 11, "effective" -> 11, "scattering" -> 11, 
         "finite" -> 11, "chiral" -> 11, "de" -> 11, "matter" -> 11, 
         "thermodynamics" -> 11, "2" -> 11|>, 
       "2023-03" -> <|
        "black" -> 71, "quantum" -> 70, "theory" -> 51, "gravity" -> 47, 
         "model" -> 37, "holes" -> 35, "hole" -> 34, "field" -> 34, "n" -> 29,
          "gauge" -> 26, "space" -> 23, "inflation" -> 23, "gravitational" -> 
         23, "theories" -> 21, "string" -> 21, "2" -> 20, "models" -> 19, 
         "energy" -> 18, "matter" -> 16, "dark" -> 16, "phase" -> 15, 
         "entanglement" -> 15, "symmetries" -> 15, "sitter" -> 15, "scalar" -> 
         15, "states" -> 15, "conformal" -> 13, "fields" -> 13, "mathcal" -> 
         13, "scattering" -> 13, "dynamics" -> 13, "symmetry" -> 13, 
         "geometry" -> 12, "systems" -> 12, "de" -> 12, "structure" -> 12, 
         "vacuum" -> 12, "holographic" -> 11, "ads" -> 11, "t" -> 11, 
         "topological" -> 11, "f" -> 11, "functions" -> 11, "charged" -> 11, 
         "classical" -> 11, "holography" -> 11, "primordial" -> 11|>, 
       "2023-02" -> <|
        "quantum" -> 75, "black" -> 46, "gravity" -> 43, "theory" -> 41, 
         "field" -> 27, "model" -> 27, "entanglement" -> 22, "hole" -> 21, 
         "holes" -> 21, "entropy" -> 20, "uc0" -> 18, "string" -> 17, "t" -> 
         17, "models" -> 17, "gravitational" -> 17, "gauge" -> 16, "scalar" -> 
         16, "symmetry" -> 16, "n" -> 15, "theories" -> 15, "dark" -> 14, 
         "dynamics" -> 13, "ads" -> 13, "matter" -> 12, "1" -> 12, "energy" -> 
         11, "states" -> 11, "holographic" -> 11, "cosmological" -> 11|>, 
       "2023-01" -> <|
        "quantum" -> 67, "black" -> 58, "theory" -> 56, "gravity" -> 55, 
         "holes" -> 39, "field" -> 37, "model" -> 22, "hole" -> 20, "n" -> 20,
          "string" -> 20, "theories" -> 19, "entanglement" -> 19, "uc0" -> 19,
          "fields" -> 18, "symmetries" -> 17, "holographic" -> 17, "gauge" -> 
         17, "cosmological" -> 17, "topological" -> 16, "models" -> 16, 
         "energy" -> 16, "symmetry" -> 15, "scalar" -> 15, "gravitational" -> 
         15, "2" -> 14, "matter" -> 13, "dark" -> 13, "particle" -> 11, 
         "dynamics" -> 11, "conformal" -> 11, "effective" -> 11|>, 
       "2022-12" -> <|
        "quantum" -> 106, "theory" -> 87, "black" -> 76, "gravity" -> 68, 
         "field" -> 54, "holes" -> 38, "model" -> 36, "n" -> 35, "gauge" -> 
         34, "2" -> 31, "hole" -> 30, "symmetry" -> 29, "string" -> 27, 
         "matter" -> 27, "theories" -> 25, "dark" -> 24, "models" -> 24, 
         "sitter" -> 23, "effective" -> 22, "fields" -> 22, "uc0" -> 21, 
         "energy" -> 21, "de" -> 21, "symmetries" -> 21, "conformal" -> 21, 
         "1" -> 19, "gravitational" -> 19, "dynamics" -> 19, "holographic" -> 
         19, "phase" -> 19, "strings" -> 19, "cosmology" -> 18, 
         "cosmological" -> 18, "dimensions" -> 18, "scalar" -> 18, "r" -> 17, 
         "entanglement" -> 17, "entropy" -> 16, "space" -> 16, "amplitudes" -> 
         16, "ads" -> 16, "topological" -> 15, "scattering" -> 15, 
         "inflation" -> 15, "qcd" -> 15, "solutions" -> 15, "geometry" -> 15, 
         "spin" -> 14, "functions" -> 14, "vacuum" -> 14, "structure" -> 13, 
         "mathcal" -> 13, "formalism" -> 12, "cosmic" -> 12, "beyond" -> 12, 
         "state" -> 12, "massive" -> 12, "states" -> 12, "spacetime" -> 12, 
         "general" -> 12, "new" -> 11, "double" -> 11, "t" -> 11, "higher" -> 
         11, "large" -> 11, "lattice" -> 11, "thermodynamics" -> 11, "using" -> 
         11, "duality" -> 11, "yang-mills" -> 11|>, 
       "2022-11" -> <|
        "quantum" -> 79, "black" -> 76, "theory" -> 57, "gravity" -> 55, 
         "field" -> 46, "holes" -> 46, "model" -> 34, "holographic" -> 33, 
         "theories" -> 32, "gauge" -> 29, "gravitational" -> 27, "2" -> 26, 
         "n" -> 25, "hole" -> 25, "dark" -> 21, "entanglement" -> 21, 
         "models" -> 19, "scalar" -> 17, "conformal" -> 17, "ads" -> 16, 
         "inflation" -> 16, "generalized" -> 16, "space" -> 16, "sitter" -> 
         15, "entropy" -> 15, "geometry" -> 15, "effective" -> 15, "spin" -> 
         14, "topological" -> 14, "string" -> 14, "uc0" -> 14, "phase" -> 14, 
         "matter" -> 13, "systems" -> 13, "functions" -> 13, "magnetic" -> 13,
          "r" -> 12, "supergravity" -> 12, "primordial" -> 12, "symmetry" -> 
         12, "4" -> 12, "waves" -> 12, "wave" -> 12, "fields" -> 12, "qcd" -> 
         11, "limit" -> 11, "mathcal" -> 11, "solutions" -> 11, "t" -> 11, 
         "3" -> 11, "charged" -> 11, "equations" -> 11, "dimensions" -> 11, 
         "holography" -> 11, "new" -> 11, "structure" -> 11, "cosmology" -> 
         11|>, "2022-10" -> <|
        "quantum" -> 80, "gravity" -> 66, "black" -> 65, "theory" -> 59, 
         "field" -> 36, "hole" -> 35, "model" -> 33, "holes" -> 28, 
         "theories" -> 28, "gravitational" -> 26, "n" -> 24, "symmetry" -> 23,
          "holographic" -> 23, "gauge" -> 23, "scalar" -> 21, "models" -> 21, 
         "dark" -> 20, "2" -> 19, "r" -> 18, "spacetime" -> 18, "string" -> 
         17, "ads" -> 17, "approach" -> 17, "f" -> 16, "topological" -> 16, 
         "effective" -> 16, "inflation" -> 16, "entanglement" -> 15, "uc0" -> 
         15, "effects" -> 14, "entropy" -> 14, "1" -> 14, "conformal" -> 14, 
         "boundary" -> 13, "space" -> 13, "cosmology" -> 13, "energy" -> 13, 
         "fields" -> 13, "classical" -> 13, "4" -> 12, "amplitudes" -> 12, 
         "waves" -> 12, "cosmological" -> 11, "3d" -> 11, "solutions" -> 11|>,
        "2022-09" -> <|
        "quantum" -> 60, "theory" -> 59, "gravity" -> 58, "black" -> 52, 
         "holographic" -> 35, "field" -> 34, "model" -> 33, "gravitational" -> 
         27, "symmetry" -> 26, "n" -> 26, "holes" -> 26, "hole" -> 23, 
         "theories" -> 22, "matter" -> 21, "2" -> 21, "gauge" -> 20, 
         "entanglement" -> 20, "t" -> 19, "entropy" -> 18, "inflation" -> 18, 
         "models" -> 16, "chiral" -> 16, "dark" -> 15, "phase" -> 14, 
         "scalar" -> 14, "uc0" -> 14, "conformal" -> 14, "4" -> 13, "new" -> 
         13, "supersymmetric" -> 13, "supergravity" -> 13, "qcd" -> 12, 
         "space" -> 12, "group" -> 12, "scattering" -> 12, "generalized" -> 
         12, "times" -> 11, "spacetime" -> 11, "primordial" -> 11, "operator" -> 
         11, "higher" -> 11, "fields" -> 11|>, 
       "2022-08" -> <|
        "quantum" -> 69, "theory" -> 63, "black" -> 54, "gravity" -> 54, 
         "field" -> 41, "model" -> 34, "hole" -> 28, "theories" -> 25, 
         "holes" -> 24, "gauge" -> 23, "holographic" -> 22, "symmetry" -> 22, 
         "gravitational" -> 21, "2" -> 21, "n" -> 20, "effective" -> 19, 
         "phase" -> 18, "dark" -> 18, "generalized" -> 17, "inflation" -> 16, 
         "energy" -> 15, "qcd" -> 15, "models" -> 15, "matter" -> 14, 
         "entanglement" -> 14, "uc0" -> 13, "holography" -> 13, "topological" -> 
         13, "string" -> 13, "dynamics" -> 13, "chiral" -> 12, "higher" -> 12,
          "entropy" -> 12, "scattering" -> 11, "conformal" -> 11, "spacetime" -> 
         11, "states" -> 11, "scalar" -> 11|>, 
       "2022-07" -> <|
        "gravity" -> 63, "black" -> 62, "quantum" -> 62, "theory" -> 59, 
         "field" -> 37, "holes" -> 35, "theories" -> 29, "hole" -> 26, 
         "model" -> 26, "gauge" -> 24, "symmetry" -> 22, "string" -> 22, 
         "dark" -> 21, "amplitudes" -> 20, "space" -> 18, "cosmological" -> 
         18, "n" -> 17, "2" -> 17, "effective" -> 17, "gravitational" -> 17, 
         "entropy" -> 17, "spin" -> 17, "chiral" -> 17, "scattering" -> 16, 
         "matter" -> 16, "conformal" -> 14, "entanglement" -> 14, "uc0" -> 14,
          "d" -> 13, "models" -> 13, "holographic" -> 13, "inflation" -> 13, 
         "fields" -> 13, "sitter" -> 12, "ads" -> 12, "effect" -> 11, 
         "mathcal" -> 11, "scalar" -> 11, "energy" -> 11, "cosmology" -> 11|>,
        "2022-06" -> <|
        "quantum" -> 60, "black" -> 60, "gravity" -> 57, "theory" -> 46, 
         "field" -> 38, "theories" -> 33, "holes" -> 30, "gauge" -> 26, 
         "hole" -> 26, "model" -> 24, "symmetry" -> 23, "gravitational" -> 19,
          "models" -> 19, "entanglement" -> 18, "dimensions" -> 17, "massive" -> 
         17, "spacetime" -> 16, "holographic" -> 16, "generalized" -> 15, 
         "fields" -> 15, "inflation" -> 15, "2" -> 15, "n" -> 15, "scalar" -> 
         15, "entropy" -> 15, "matter" -> 14, "structure" -> 14, "space" -> 
         13, "string" -> 13, "t" -> 13, "1" -> 12, "uc0" -> 12, "charged" -> 
         12, "topological" -> 12, "conformal" -> 12, "spin" -> 11, 
         "constraints" -> 11, "modes" -> 11, "sitter" -> 11, "spacetimes" -> 
         11, "symmetries" -> 11|>, 
       "2022-05" -> <|
        "black" -> 79, "gravity" -> 68, "quantum" -> 59, "theory" -> 51, 
         "field" -> 42, "holes" -> 41, "hole" -> 35, "theories" -> 31, 
         "gravitational" -> 29, "model" -> 28, "gauge" -> 23, "n" -> 20, 
         "scalar" -> 19, "holographic" -> 19, "phase" -> 18, "symmetry" -> 18,
          "string" -> 18, "uc0" -> 18, "entanglement" -> 17, "dynamics" -> 16,
          "2" -> 16, "ads" -> 15, "waves" -> 15, "cosmological" -> 15, 
         "higher" -> 15, "generalized" -> 15, "symmetries" -> 14, 
         "topological" -> 14, "energy" -> 14, "mathcal" -> 14, "effective" -> 
         14, "inflation" -> 13, "matter" -> 13, "models" -> 13, "chiral" -> 
         12, "primordial" -> 12, "strings" -> 12, "classical" -> 12, "dark" -> 
         12, "conformal" -> 12, "cosmology" -> 12, "t" -> 11, "structure" -> 
         11, "spin" -> 11, "charged" -> 11, "modes" -> 11, "fields" -> 11|>, 
       "2022-04" -> <|
        "theory" -> 55, "quantum" -> 55, "black" -> 49, "gravity" -> 40, 
         "field" -> 39, "holes" -> 30, "models" -> 28, "theories" -> 25, 
         "model" -> 22, "scalar" -> 22, "cosmological" -> 20, "string" -> 19, 
         "2" -> 17, "hole" -> 17, "gravitational" -> 17, "topological" -> 16, 
         "sitter" -> 16, "n" -> 14, "generalized" -> 13, "gauge" -> 13, 
         "phase" -> 13, "energy" -> 13, "charged" -> 13, "dark" -> 13, 
         "entropy" -> 12, "inflation" -> 12, "holographic" -> 12, "geometry" -> 
         12, "higher" -> 12, "cosmology" -> 11, "physics" -> 11, 
         "entanglement" -> 11, "equations" -> 11, "effects" -> 11, 
         "conformal" -> 11, "effective" -> 11, "ads" -> 11, "de" -> 11|>, 
       "2022-03" -> <|
        "quantum" -> 69, "black" -> 67, "gravity" -> 65, "theory" -> 59, 
         "field" -> 40, "holes" -> 40, "model" -> 33, "amplitudes" -> 33, 
         "theories" -> 29, "models" -> 29, "gravitational" -> 29, "hole" -> 
         28, "scattering" -> 28, "cosmology" -> 22, "entanglement" -> 21, 
         "cosmological" -> 21, "n" -> 21, "white" -> 20, "dark" -> 20, 
         "paper" -> 19, "scalar" -> 19, "snowmass" -> 18, "review" -> 18, 
         "gauge" -> 18, "holographic" -> 18, "inflation" -> 17, "4" -> 17, 
         "sagex" -> 16, "chapter" -> 15, "fields" -> 15, "topological" -> 15, 
         "geometry" -> 15, "string" -> 15, "symmetries" -> 15, "conformal" -> 
         15, "physics" -> 14, "sitter" -> 14, "energy" -> 14, "uc0" -> 14, 
         "wave" -> 14, "spacetime" -> 14, "3" -> 13, "states" -> 13, 
         "symmetry" -> 13, "entropy" -> 13, "t" -> 12, "new" -> 12, "de" -> 
         12, "effect" -> 12, "dynamical" -> 12, "flat" -> 12, "spin" -> 12, 
         "matter" -> 12, "yang-mills" -> 11, "modified" -> 11, "space" -> 11, 
         "mathcal" -> 11, "2" -> 11|>, 
       "2022-02" -> <|
        "quantum" -> 66, "theory" -> 53, "gravity" -> 52, "black" -> 52, 
         "field" -> 43, "theories" -> 26, "holes" -> 25, "gravitational" -> 
         23, "n" -> 21, "string" -> 20, "energy" -> 20, "hole" -> 19, "2" -> 
         17, "holographic" -> 17, "fields" -> 17, "gauge" -> 16, "scalar" -> 
         16, "dark" -> 16, "matter" -> 16, "conformal" -> 15, "model" -> 15, 
         "inflation" -> 15, "spin" -> 14, "models" -> 14, "t" -> 12, "space" -> 
         12, "ads" -> 12, "dynamics" -> 12, "entanglement" -> 11, "sitter" -> 
         11, "anomaly" -> 11, "symmetry" -> 11, "uc0" -> 11, "cosmological" -> 
         11, "coupled" -> 11, "strings" -> 11|>, 
       "2022-01" -> <|
        "black" -> 53, "quantum" -> 48, "gravity" -> 44, "theory" -> 43, 
         "field" -> 33, "model" -> 32, "holes" -> 28, "theories" -> 25, 
         "gauge" -> 23, "gravitational" -> 22, "hole" -> 21, "entanglement" -> 
         20, "energy" -> 20, "2" -> 19, "symmetry" -> 18, "entropy" -> 17, 
         "dark" -> 15, "uc0" -> 15, "scalar" -> 15, "n" -> 14, "models" -> 14,
          "topological" -> 14, "phase" -> 14, "fields" -> 14, "amplitudes" -> 
         13, "space" -> 12, "symmetries" -> 12, "cosmological" -> 12, "+1" -> 
         12, "effective" -> 11, "spacetime" -> 11, "string" -> 11, 
         "scattering" -> 11|>, 
       "2021-12" -> <|
        "quantum" -> 96, "black" -> 79, "gravity" -> 59, "theory" -> 58, 
         "field" -> 56, "model" -> 45, "holes" -> 42, "theories" -> 36, 
         "hole" -> 33, "models" -> 31, "symmetry" -> 29, "holographic" -> 29, 
         "energy" -> 27, "cosmological" -> 25, "dark" -> 25, "gravitational" -> 
         24, "scattering" -> 23, "phase" -> 23, "2" -> 23, "conformal" -> 22, 
         "uc0" -> 22, "space" -> 21, "entanglement" -> 21, "gauge" -> 20, "n" -> 
         20, "new" -> 20, "entropy" -> 20, "topological" -> 19, "1" -> 19, 
         "spin" -> 19, "spacetime" -> 19, "string" -> 18, "matter" -> 18, 
         "generalized" -> 17, "effective" -> 17, "states" -> 17, "amplitudes" -> 
         17, "d" -> 17, "symmetries" -> 17, "systems" -> 16, "r" -> 16, 
         "supersymmetric" -> 15, "fields" -> 15, "effect" -> 15, "primordial" -> 
         14, "scalar" -> 14, "dynamics" -> 14, "duality" -> 14, 
         "thermodynamics" -> 14, "3" -> 13, "classical" -> 13, "sitter" -> 13,
          "higher" -> 13, "dimensions" -> 13, "structure" -> 12, "effects" -> 
         12, "magnetic" -> 12, "holography" -> 12, "qcd" -> 12, "inflation" -> 
         12, "universe" -> 12, "cosmology" -> 12, "4" -> 12, "equations" -> 
         11, "mathcal" -> 11, "de" -> 11, "transition" -> 11, "ads" -> 11, 
         "lattice" -> 11, "functions" -> 11, "flow" -> 11, "via" -> 11|>, 
       "2021-11" -> <|
        "quantum" -> 72, "black" -> 65, "theory" -> 57, "model" -> 52, 
         "gravity" -> 46, "field" -> 42, "holes" -> 42, "n" -> 35, "gauge" -> 
         34, "theories" -> 33, "qcd" -> 26, "1" -> 25, "holographic" -> 24, 
         "gravitational" -> 23, "effective" -> 22, "models" -> 21, "hole" -> 
         20, "4" -> 20, "entanglement" -> 20, "string" -> 19, "scalar" -> 18, 
         "inflation" -> 18, "2" -> 18, "fields" -> 18, "symmetry" -> 17, 
         "spacetime" -> 17, "+1" -> 17, "energy" -> 17, "t" -> 16, 
         "generalized" -> 16, "dark" -> 15, "spin" -> 15, "mathcal" -> 15, 
         "conformal" -> 15, "matter" -> 15, "ads" -> 14, "entropy" -> 14, 
         "space" -> 14, "supersymmetric" -> 14, "3d" -> 14, "uc0" -> 14, 
         "phase" -> 13, "d" -> 13, "boundary" -> 13, "lattice" -> 13, 
         "dynamical" -> 13, "amplitudes" -> 13, "scattering" -> 12, "f" -> 12,
          "vacuum" -> 12, "topological" -> 12, "symmetries" -> 12, 
         "yang-mills" -> 12, "holography" -> 12, "general" -> 11, "higgs" -> 
         11, "magnetic" -> 11, "mass" -> 11, "dimensions" -> 11|>, 
       "2021-10" -> <|
        "quantum" -> 92, "black" -> 56, "theory" -> 55, "gravity" -> 51, 
         "model" -> 43, "holes" -> 37, "field" -> 36, "theories" -> 35, 
         "gauge" -> 28, "gravitational" -> 28, "models" -> 28, "n" -> 27, 
         "holographic" -> 24, "symmetries" -> 24, "spacetime" -> 19, "string" -> 
         18, "symmetry" -> 18, "fields" -> 18, "conformal" -> 18, "scalar" -> 
         17, "2" -> 17, "functions" -> 16, "entanglement" -> 16, "inflation" -> 
         16, "hole" -> 16, "ads" -> 15, "approach" -> 15, "dark" -> 15, 
         "amplitudes" -> 15, "uc0" -> 14, "supergravity" -> 14, "matter" -> 
         14, "cosmological" -> 14, "qcd" -> 14, "states" -> 13, "critical" -> 
         13, "systems" -> 13, "4" -> 13, "scattering" -> 12, "local" -> 12, 
         "phase" -> 12, "space" -> 11, "1" -> 11, "vacuum" -> 11, "solutions" -> 
         11, "entropy" -> 11, "via" -> 11, "duality" -> 11, "massive" -> 11, 
         "loop" -> 11|>, 
       "2021-09" -> <|
        "quantum" -> 61, "gravity" -> 57, "black" -> 54, "theory" -> 47, 
         "field" -> 38, "holes" -> 33, "2" -> 28, "model" -> 28, "theories" -> 
         25, "holographic" -> 23, "symmetry" -> 23, "n" -> 22, "models" -> 21,
          "hole" -> 20, "string" -> 19, "scalar" -> 19, "gauge" -> 18, 
         "chiral" -> 17, "massive" -> 16, "topological" -> 16, 
         "gravitational" -> 15, "cosmological" -> 15, "uc0" -> 15, "dynamics" -> 
         15, "dimensions" -> 14, "energy" -> 14, "phase" -> 14, "1" -> 13, 
         "vacuum" -> 13, "structure" -> 12, "higher" -> 12, "dark" -> 12, 
         "entanglement" -> 12, "tensor" -> 12, "classical" -> 12, "double" -> 
         12, "fields" -> 11, "effective" -> 11, "matter" -> 11, "de" -> 11, 
         "d" -> 11, "inflation" -> 11, "holography" -> 11, "symmetries" -> 11,
          "coupled" -> 11|>, 
       "2021-08" -> <|
        "black" -> 54, "quantum" -> 47, "gravity" -> 45, "theory" -> 43, 
         "model" -> 33, "field" -> 32, "gravitational" -> 31, "holes" -> 27, 
         "hole" -> 26, "holographic" -> 21, "dark" -> 20, "gauge" -> 19, "n" -> 
         18, "theories" -> 18, "conformal" -> 18, "symmetry" -> 16, "strings" -> 
         16, "matter" -> 16, "energy" -> 16, "entropy" -> 15, "inflation" -> 
         15, "models" -> 14, "topological" -> 14, "scattering" -> 14, 
         "fields" -> 13, "qcd" -> 13, "1" -> 13, "2" -> 13, "entanglement" -> 
         13, "ads" -> 13, "amplitudes" -> 13, "spin" -> 12, "waves" -> 11, 
         "phase" -> 11, "massive" -> 11, "primordial" -> 11, "cosmology" -> 
         11, "effective" -> 11, "string" -> 11|>, 
       "2021-07" -> <|
        "quantum" -> 59, "gravity" -> 52, "black" -> 43, "theory" -> 37, 
         "field" -> 31, "holes" -> 28, "theories" -> 27, "gravitational" -> 
         23, "model" -> 23, "holographic" -> 21, "2" -> 21, "n" -> 19, 
         "inflation" -> 19, "gauge" -> 17, "models" -> 17, "dimensions" -> 16,
          "hole" -> 16, "geometry" -> 16, "scalar" -> 16, "entropy" -> 15, 
         "conformal" -> 15, "entanglement" -> 14, "scattering" -> 14, 
         "string" -> 13, "states" -> 13, "uc0" -> 13, "energy" -> 13, "spin" -> 
         12, "dark" -> 12, "cosmological" -> 12, "3" -> 12, "massive" -> 11, 
         "phase" -> 11, "approach" -> 11, "mass" -> 11|>, 
       "2021-06" -> <|
        "quantum" -> 64, "black" -> 58, "theory" -> 47, "gravity" -> 47, 
         "holes" -> 38, "model" -> 36, "field" -> 31, "theories" -> 29, "n" -> 
         26, "symmetry" -> 24, "matter" -> 24, "entanglement" -> 23, "fields" -> 
         23, "holographic" -> 22, "gravitational" -> 22, "gauge" -> 20, 
         "cosmological" -> 19, "hole" -> 18, "2" -> 17, "qcd" -> 17, "models" -> 
         17, "inflation" -> 16, "dark" -> 16, "string" -> 16, "mathcal" -> 14,
          "uc0" -> 13, "breaking" -> 12, "ads" -> 12, "dynamics" -> 12, 
         "topological" -> 12, "entropy" -> 12, "scalar" -> 12, "local" -> 12, 
         "chiral" -> 11, "supergravity" -> 11, "space" -> 11, "complexity" -> 
         11, "cosmic" -> 11, "algebras" -> 11, "new" -> 11|>, 
       "2021-05" -> <|
        "quantum" -> 70, "black" -> 63, "gravity" -> 62, "theory" -> 50, 
         "field" -> 39, "holes" -> 37, "theories" -> 34, "model" -> 34, 
         "gauge" -> 28, "hole" -> 26, "2" -> 25, "gravitational" -> 22, "n" -> 
         20, "holographic" -> 20, "entanglement" -> 19, "dimensions" -> 16, 
         "models" -> 16, "states" -> 16, "symmetry" -> 15, "fields" -> 15, 
         "scalar" -> 15, "string" -> 15, "geometry" -> 15, "space" -> 15, 
         "sitter" -> 15, "general" -> 14, "energy" -> 14, "dynamics" -> 14, 
         "spin" -> 14, "uc0" -> 13, "massive" -> 13, "t" -> 13, "matter" -> 
         13, "dark" -> 13, "classical" -> 12, "cosmology" -> 12, 
         "cosmological" -> 12, "entropy" -> 12, "de" -> 12, "topological" -> 
         11, "ads" -> 11, "magnetic" -> 11, "3d" -> 11, "functions" -> 11, 
         "higher" -> 11, "structure" -> 11|>, 
       "2021-04" -> <|
        "theory" -> 52, "quantum" -> 52, "gravity" -> 50, "black" -> 48, 
         "field" -> 37, "model" -> 33, "symmetry" -> 29, "holes" -> 27, "n" -> 
         25, "conformal" -> 24, "theories" -> 23, "2" -> 22, "entanglement" -> 
         20, "gauge" -> 20, "hole" -> 18, "effective" -> 17, "gravitational" -> 
         17, "dark" -> 17, "uc0" -> 17, "models" -> 17, "matter" -> 16, 
         "phase" -> 16, "scalar" -> 15, "cosmological" -> 14, "space" -> 14, 
         "topological" -> 14, "magnetic" -> 14, "string" -> 14, "ads" -> 13, 
         "fields" -> 13, "t" -> 12, "approach" -> 12, "equations" -> 12, 
         "higher" -> 12, "dimensions" -> 12, "new" -> 11, "transition" -> 11, 
         "entropy" -> 11|>, 
       "2021-03" -> <|
        "theory" -> 71, "quantum" -> 66, "black" -> 60, "field" -> 60, 
         "gravity" -> 45, "holes" -> 35, "theories" -> 35, "symmetry" -> 28, 
         "string" -> 26, "gauge" -> 26, "model" -> 26, "hole" -> 25, "n" -> 
         25, "models" -> 19, "uc0" -> 18, "gravitational" -> 18, "2" -> 18, 
         "conformal" -> 18, "entanglement" -> 17, "holographic" -> 17, 
         "duality" -> 16, "qcd" -> 15, "scalar" -> 15, "mechanics" -> 14, "1" -> 
         14, "dynamics" -> 14, "inflation" -> 14, "matter" -> 13, "magnetic" -> 
         12, "chiral" -> 12, "effective" -> 12, "fields" -> 12, "space" -> 12,
          "4" -> 12, "anomaly" -> 11, "topological" -> 11, "cosmological" -> 
         11, "approach" -> 11, "general" -> 11, "3" -> 11, "boundary" -> 11|>,
        "2021-02" -> <|
        "black" -> 52, "quantum" -> 52, "theory" -> 43, "field" -> 40, 
         "gravity" -> 39, "holes" -> 30, "models" -> 27, "theories" -> 24, 
         "n" -> 24, "holographic" -> 22, "hole" -> 22, "scalar" -> 17, 
         "dimensions" -> 16, "fields" -> 16, "model" -> 15, "symmetry" -> 15, 
         "symmetries" -> 14, "conformal" -> 14, "phase" -> 14, "2" -> 14, 
         "spacetime" -> 14, "entanglement" -> 14, "cosmological" -> 13, 
         "gauge" -> 12, "mathcal" -> 12, "r" -> 12, "energy" -> 12, 
         "inflation" -> 12, "geometry" -> 12, "spin" -> 12, "mass" -> 12, 
         "qcd" -> 11, "effective" -> 11|>, 
       "2021-01" -> <|
        "theory" -> 60, "quantum" -> 54, "gravity" -> 49, "field" -> 39, 
         "black" -> 32, "model" -> 25, "gauge" -> 25, "gravitational" -> 22, 
         "holographic" -> 21, "theories" -> 20, "n" -> 19, "uc0" -> 19, 
         "cosmological" -> 18, "dynamics" -> 17, "holes" -> 16, "2" -> 16, 
         "hole" -> 15, "solutions" -> 15, "conformal" -> 15, "effective" -> 
         15, "entanglement" -> 14, "topological" -> 13, "models" -> 13, 
         "scalar" -> 13, "string" -> 12, "cosmology" -> 12, "energy" -> 12, 
         "space" -> 11|>, 
       "2020-12" -> <|
        "quantum" -> 85, "black" -> 76, "gravity" -> 72, "theory" -> 70, 
         "field" -> 53, "n" -> 44, "t" -> 39, "model" -> 38, "hole" -> 37, 
         "theories" -> 34, "holes" -> 34, "gravitational" -> 27, "2" -> 27, 
         "gauge" -> 26, "holographic" -> 24, "uc0" -> 22, "models" -> 21, 
         "mathcal" -> 21, "bar" -> 20, "symmetry" -> 19, "cosmological" -> 18,
          "fields" -> 18, "conformal" -> 18, "string" -> 18, "entanglement" -> 
         18, "boundary" -> 18, "space" -> 17, "matter" -> 17, "effective" -> 
         16, "1" -> 16, "solutions" -> 16, "amplitudes" -> 16, "dynamics" -> 
         15, "primordial" -> 15, "symmetries" -> 15, "spacetime" -> 14, 
         "topological" -> 14, "waves" -> 14, "cosmology" -> 14, "particle" -> 
         14, "inflation" -> 14, "spin" -> 14, "energy" -> 13, "scattering" -> 
         13, "su" -> 13, "order" -> 13, "approach" -> 13, "phase" -> 13, 
         "dark" -> 12, "functions" -> 12, "dimensions" -> 12, "yang-mills" -> 
         12, "4d" -> 12, "deformed" -> 12, "systems" -> 12, "ads" -> 12, "f" -> 
         11, "entropy" -> 11, "sitter" -> 11, "3" -> 11, "higher" -> 11, 
         "chiral" -> 11, "holography" -> 11, "double" -> 11, "algebra" -> 
         11|>, "2020-11" -> <|
        "quantum" -> 63, "gravity" -> 62, "theory" -> 54, "black" -> 53, 
         "field" -> 36, "model" -> 32, "theories" -> 30, "holes" -> 29, 
         "models" -> 25, "hole" -> 22, "n" -> 22, "holographic" -> 21, "ads" -> 
         21, "string" -> 20, "gauge" -> 20, "t" -> 18, "scalar" -> 18, "dark" -> 
         17, "effective" -> 17, "gravitational" -> 16, "entropy" -> 16, 
         "conformal" -> 16, "inflation" -> 16, "spin" -> 16, "uc0" -> 16, 
         "entanglement" -> 15, "topological" -> 14, "fields" -> 14, "phase" -> 
         14, "space" -> 14, "sitter" -> 14, "matter" -> 13, "mathcal" -> 13, 
         "structure" -> 13, "states" -> 13, "dimensions" -> 13, "dynamics" -> 
         12, "effects" -> 12, "symmetries" -> 12, "higgs" -> 12, "4" -> 12, 
         "cosmological" -> 12, "symmetry" -> 12, "magnetic" -> 11, "higher" -> 
         11, "r" -> 11, "energy" -> 11, "de" -> 11, "weak" -> 11, 
         "amplitudes" -> 11, "2" -> 11|>, 
       "2020-10" -> <|
        "quantum" -> 73, "black" -> 62, "gravity" -> 54, "theory" -> 52, 
         "field" -> 45, "holes" -> 40, "theories" -> 28, "model" -> 28, "n" -> 
         28, "models" -> 27, "2" -> 25, "symmetry" -> 24, "hole" -> 22, 
         "scalar" -> 22, "gravitational" -> 20, "fields" -> 19, "gauge" -> 19,
          "phase" -> 19, "scattering" -> 19, "string" -> 19, "spin" -> 18, 
         "particles" -> 18, "dark" -> 18, "uc0" -> 17, "t" -> 17, "matter" -> 
         16, "inflation" -> 15, "holography" -> 15, "higher" -> 15, 
         "effective" -> 15, "holographic" -> 14, "entanglement" -> 14, 
         "entropy" -> 14, "dynamics" -> 13, "massive" -> 13, "dimensions" -> 
         13, "1" -> 13, "amplitudes" -> 13, "chiral" -> 12, "topological" -> 
         12, "sitter" -> 12, "space" -> 12, "conformal" -> 12, "4" -> 12, 
         "mathcal" -> 12, "energy" -> 12, "waves" -> 11, "dimensional" -> 11, 
         "generalized" -> 11, "de" -> 11, "order" -> 11, "supergravity" -> 11,
          "ads" -> 11|>, 
       "2020-09" -> <|
        "black" -> 71, "quantum" -> 64, "gravity" -> 61, "theory" -> 56, 
         "field" -> 41, "holes" -> 39, "model" -> 35, "hole" -> 31, 
         "gravitational" -> 28, "theories" -> 27, "gauge" -> 25, "phase" -> 
         23, "symmetry" -> 22, "models" -> 20, "2" -> 20, "n" -> 20, "chiral" -> 
         18, "matter" -> 18, "1" -> 18, "scalar" -> 18, "energy" -> 16, 
         "dynamics" -> 16, "ads" -> 16, "dark" -> 16, "cosmological" -> 16, 
         "inflation" -> 16, "charged" -> 16, "spin" -> 15, "spacetime" -> 15, 
         "entropy" -> 15, "holographic" -> 15, "uc0" -> 15, "entanglement" -> 
         14, "topological" -> 14, "effects" -> 14, "group" -> 14, "massive" -> 
         14, "constraints" -> 13, "scattering" -> 13, "states" -> 13, 
         "renormalization" -> 13, "string" -> 12, "approach" -> 12, 
         "dimensions" -> 12, "fields" -> 12, "effective" -> 12, "new" -> 12, 
         "structure" -> 11, "mass" -> 11, "general" -> 11, "cosmology" -> 11, 
         "tensor" -> 11|>, 
       "2020-08" -> <|
        "quantum" -> 64, "theory" -> 50, "black" -> 47, "gravity" -> 43, 
         "field" -> 39, "theories" -> 30, "holes" -> 27, "holographic" -> 23, 
         "string" -> 22, "gauge" -> 21, "hole" -> 20, "n" -> 20, "model" -> 
         19, "energy" -> 19, "matter" -> 19, "dark" -> 19, "2" -> 17, 
         "effective" -> 15, "conformal" -> 15, "entropy" -> 15, "spacetime" -> 
         15, "fields" -> 15, "scalar" -> 15, "models" -> 15, "space" -> 14, 
         "1" -> 14, "symmetry" -> 14, "inflation" -> 13, "systems" -> 13, 
         "spin" -> 13, "phase" -> 13, "topological" -> 12, "particle" -> 12, 
         "cosmological" -> 12, "cosmic" -> 12, "primordial" -> 11, 
         "entanglement" -> 11, "chiral" -> 11, "gravitational" -> 11, "new" -> 
         11|>, "2020-07" -> <|
        "quantum" -> 69, "gravity" -> 58, "black" -> 58, "theory" -> 55, 
         "field" -> 41, "holes" -> 39, "model" -> 36, "theories" -> 34, 
         "gravitational" -> 26, "models" -> 26, "gauge" -> 24, "matter" -> 23,
          "n" -> 22, "inflation" -> 20, "dark" -> 20, "2" -> 18, "uc0" -> 18, 
         "hole" -> 18, "topological" -> 17, "dynamics" -> 17, "cosmological" -> 
         16, "holographic" -> 16, "ads" -> 16, "scalar" -> 16, "energy" -> 15,
          "string" -> 15, "equations" -> 15, "dimensions" -> 15, "systems" -> 
         14, "conformal" -> 14, "entropy" -> 14, "entanglement" -> 14, "1" -> 
         13, "effective" -> 13, "general" -> 13, "space" -> 13, "higher" -> 
         13, "symmetries" -> 13, "sitter" -> 13, "finite" -> 12, "symmetry" -> 
         12, "amplitudes" -> 12, "potential" -> 12, "dynamical" -> 12, "spin" -> 
         12, "3" -> 12, "particle" -> 11, "d" -> 11, "fermions" -> 11, 
         "strings" -> 11, "times" -> 11, "new" -> 11, "loop" -> 11, "states" -> 
         11|>, "2020-06" -> <|
        "gravity" -> 64, "black" -> 61, "quantum" -> 48, "theory" -> 45, 
         "theories" -> 43, "field" -> 35, "model" -> 34, "holes" -> 33, 
         "models" -> 28, "entanglement" -> 23, "hole" -> 23, "holographic" -> 
         22, "entropy" -> 22, "n" -> 21, "dark" -> 21, "t" -> 20, "2" -> 20, 
         "energy" -> 18, "scalar" -> 17, "effective" -> 17, "gravitational" -> 
         17, "conformal" -> 16, "string" -> 16, "uc0" -> 16, "gauge" -> 16, 
         "phase" -> 15, "holography" -> 15, "matter" -> 15, "fields" -> 14, 
         "space" -> 14, "spacetime" -> 14, "topological" -> 14, "effect" -> 
         12, "dimensions" -> 12, "cosmological" -> 12, "geometry" -> 12, 
         "dynamics" -> 12, "mathbb" -> 11, "matrix" -> 11, "inflation" -> 11, 
         "sitter" -> 11, "massive" -> 11, "boundary" -> 11, "functions" -> 11,
          "equations" -> 11, "general" -> 11|>, 
       "2020-05" -> <|
        "quantum" -> 75, "gravity" -> 70, "black" -> 55, "theory" -> 53, 
         "field" -> 52, "n" -> 44, "theories" -> 35, "holes" -> 31, "model" -> 
         29, "scalar" -> 26, "holographic" -> 25, "models" -> 25, "2" -> 24, 
         "hole" -> 24, "conformal" -> 20, "space" -> 20, "matter" -> 20, 
         "entropy" -> 20, "gauge" -> 19, "dark" -> 19, "gravitational" -> 19, 
         "uc0" -> 19, "energy" -> 19, "generalized" -> 19, "dimensions" -> 19,
          "cosmological" -> 18, "massive" -> 18, "topological" -> 18, 
         "effective" -> 17, "string" -> 17, "4" -> 17, "mathcal" -> 16, 
         "magnetic" -> 16, "spin" -> 16, "inflation" -> 16, "symmetry" -> 16, 
         "effect" -> 16, "phase" -> 15, "t" -> 15, "entanglement" -> 15, 
         "chiral" -> 14, "functions" -> 14, "higher" -> 14, "ads" -> 14, 
         "qcd" -> 14, "symmetries" -> 13, "fields" -> 13, "spacetime" -> 13, 
         "large" -> 12, "r" -> 12, "geometry" -> 12, "anomaly" -> 12, 
         "approach" -> 12, "mathbb" -> 11, "universe" -> 11, "su" -> 11, "1" -> 
         11, "yang-mills" -> 11|>, 
       "2020-04" -> <|
        "gravity" -> 79, "black" -> 76, "theory" -> 72, "quantum" -> 53, 
         "field" -> 50, "holes" -> 42, "model" -> 41, "theories" -> 38, 
         "hole" -> 34, "gauge" -> 30, "n" -> 24, "scalar" -> 22, 
         "entanglement" -> 20, "dimensions" -> 20, "holographic" -> 19, "2" -> 
         19, "ads" -> 19, "matter" -> 19, "dark" -> 18, "inflation" -> 17, 
         "symmetry" -> 17, "conformal" -> 17, "gravitational" -> 16, "4" -> 
         16, "1" -> 16, "fields" -> 16, "chiral" -> 16, "effective" -> 15, 
         "spin" -> 15, "geometry" -> 15, "entropy" -> 15, "4d" -> 14, 
         "cosmological" -> 14, "energy" -> 14, "general" -> 14, "dynamics" -> 
         13, "massive" -> 13, "equations" -> 13, "matrix" -> 13, "models" -> 
         13, "magnetic" -> 13, "uc0" -> 13, "solutions" -> 13, "boundary" -> 
         13, "sitter" -> 12, "charged" -> 12, "einstein-gauss-bonnet" -> 12, 
         "novel" -> 12, "spacetime" -> 12, "renormalization" -> 11, 
         "temperature" -> 11, "group" -> 11, "qcd" -> 11, "topological" -> 11,
          "duality" -> 11, "generalized" -> 11|>, 
       "2020-03" -> <|
        "quantum" -> 56, "gravity" -> 55, "black" -> 42, "theory" -> 41, "n" -> 
         37, "models" -> 30, "2" -> 29, "holes" -> 28, "field" -> 28, "model" -> 
         26, "theories" -> 23, "string" -> 20, "space" -> 19, "gauge" -> 19, 
         "inflation" -> 17, "holographic" -> 17, "gravitational" -> 16, 
         "phase" -> 16, "matter" -> 15, "r" -> 15, "ads" -> 15, "4" -> 15, 
         "symmetry" -> 15, "topological" -> 14, "1" -> 14, "higher" -> 14, 
         "cosmological" -> 13, "symmetries" -> 13, "mathcal" -> 12, 
         "geometry" -> 12, "fields" -> 12, "conformal" -> 12, "dark" -> 12, 
         "hole" -> 12, "scalar" -> 12, "dimensions" -> 12, "states" -> 11, 
         "d" -> 11, "massive" -> 11, "large" -> 11, "entropy" -> 11, "uc0" -> 
         11, "super" -> 11, "limit" -> 11, "sitter" -> 11|>, 
       "2020-02" -> <|
        "quantum" -> 66, "black" -> 45, "theory" -> 43, "gravity" -> 37, 
         "field" -> 28, "holes" -> 25, "model" -> 23, "n" -> 23, "theories" -> 
         22, "holographic" -> 21, "hole" -> 18, "geometry" -> 17, "2" -> 16, 
         "dark" -> 15, "string" -> 15, "gauge" -> 14, "models" -> 14, "ads" -> 
         14, "symmetry" -> 13, "entanglement" -> 13, "matter" -> 13, 
         "inflation" -> 12, "conformal" -> 12, "qcd" -> 11, "spin" -> 11, 
         "generalized" -> 11, "phase" -> 11, "uc0" -> 11, "energy" -> 11|>, 
       "2020-01" -> <|
        "quantum" -> 48, "black" -> 39, "theory" -> 35, "gravity" -> 34, "n" -> 
         26, "model" -> 25, "field" -> 25, "gauge" -> 23, "holographic" -> 21,
          "holes" -> 20, "theories" -> 19, "hole" -> 18, "models" -> 18, "2" -> 
         17, "qcd" -> 17, "scalar" -> 16, "matter" -> 16, "conformal" -> 15, 
         "gravitational" -> 14, "ads" -> 13, "symmetry" -> 13, "space" -> 12, 
         "functions" -> 12, "phase" -> 12, "supersymmetric" -> 11, 
         "inflation" -> 11, "structure" -> 11|>, 
       "2019-12" -> <|
        "quantum" -> 82, "theory" -> 77, "black" -> 70, "gravity" -> 59, 
         "field" -> 52, "n" -> 49, "holes" -> 37, "model" -> 37, "theories" -> 
         33, "hole" -> 31, "2" -> 30, "matter" -> 29, "gauge" -> 29, "fields" -> 
         25, "dark" -> 25, "models" -> 25, "conformal" -> 25, "entanglement" -> 
         24, "1" -> 23, "energy" -> 22, "string" -> 22, "scalar" -> 21, 
         "dynamics" -> 21, "4" -> 21, "symmetry" -> 21, "uc0" -> 20, 
         "amplitudes" -> 19, "gravitational" -> 19, "inflation" -> 18, 
         "holographic" -> 17, "t" -> 17, "effective" -> 17, "mathcal" -> 17, 
         "supergravity" -> 17, "supersymmetric" -> 16, "geometry" -> 16, 
         "generalized" -> 16, "ads" -> 15, "new" -> 15, "massive" -> 14, 
         "dimensions" -> 14, "3" -> 13, "higgs" -> 13, "cosmological" -> 13, 
         "integrals" -> 13, "mass" -> 13, "general" -> 13, "boundary" -> 13, 
         "sitter" -> 13, "topological" -> 13, "symmetries" -> 13, "charged" -> 
         12, "functions" -> 12, "function" -> 12, "scattering" -> 12, "modes" -> 
         12, "space" -> 12, "de" -> 12, "critical" -> 12, "cft" -> 12, 
         "cosmology" -> 12, "spacetime" -> 11, "primordial" -> 11, 
         "operators" -> 11, "higher" -> 11|>, 
       "2019-11" -> <|
        "quantum" -> 65, "black" -> 60, "gravity" -> 53, "theory" -> 50, 
         "field" -> 49, "model" -> 34, "theories" -> 32, "hole" -> 30, 
         "gauge" -> 29, "models" -> 29, "n" -> 28, "holes" -> 27, 
         "entanglement" -> 26, "holographic" -> 25, "string" -> 23, 
         "cosmological" -> 20, "conformal" -> 20, "t" -> 20, "energy" -> 19, 
         "2" -> 19, "scalar" -> 19, "dark" -> 18, "entropy" -> 17, "symmetry" -> 
         17, "gravitational" -> 16, "matter" -> 14, "inflation" -> 14, 
         "general" -> 13, "1" -> 13, "3" -> 13, "strings" -> 13, "new" -> 13, 
         "ads" -> 13, "solutions" -> 13, "cosmology" -> 13, "tensor" -> 13, 
         "dynamics" -> 13, "effect" -> 13, "operator" -> 12, "spin" -> 12, 
         "massive" -> 12, "cosmic" -> 12, "spacetime" -> 12, "fields" -> 12, 
         "higher" -> 11, "dimensions" -> 11, "bar" -> 11, "uc0" -> 11, 
         "sitter" -> 11, "phase" -> 11, "classical" -> 11, "universe" -> 11, 
         "equations" -> 11, "space" -> 11|>, 
       "2019-10" -> <|
        "quantum" -> 62, "black" -> 60, "theory" -> 44, "gravity" -> 39, 
         "field" -> 36, "hole" -> 32, "theories" -> 32, "model" -> 29, "n" -> 
         28, "symmetry" -> 27, "gravitational" -> 26, "models" -> 26, "holes" -> 
         26, "gauge" -> 25, "scalar" -> 24, "dark" -> 21, "geometry" -> 20, 
         "inflation" -> 20, "holographic" -> 19, "2" -> 17, "dimensions" -> 
         17, "censorship" -> 16, "entropy" -> 16, "entanglement" -> 15, 
         "particle" -> 15, "cosmological" -> 15, "matter" -> 15, 
         "generalized" -> 14, "energy" -> 14, "amplitudes" -> 14, "spin" -> 
         14, "conjecture" -> 14, "uc0" -> 14, "string" -> 14, 
         "supersymmetric" -> 13, "charged" -> 13, "4" -> 13, "approach" -> 12,
          "t" -> 12, "scattering" -> 12, "waves" -> 12, "higgs" -> 12, 
         "space" -> 12, "solutions" -> 12, "dynamics" -> 12, "ads" -> 12, 
         "higher" -> 12, "mathcal" -> 11, "+1" -> 11, "mass" -> 11, "qcd" -> 
         11, "fields" -> 11, "new" -> 11, "lattice" -> 11, "trans-planckian" -> 
         11, "yang-mills" -> 11, "via" -> 11, "topological" -> 11, "dirac" -> 
         11|>, "2019-09" -> <|
        "black" -> 61, "quantum" -> 56, "theory" -> 44, "gravity" -> 37, 
         "field" -> 33, "holes" -> 32, "n" -> 31, "hole" -> 27, "gauge" -> 26,
          "model" -> 26, "theories" -> 25, "gravitational" -> 24, 
         "holographic" -> 20, "string" -> 18, "dark" -> 17, "2" -> 16, 
         "higher" -> 15, "t" -> 15, "matter" -> 15, "entropy" -> 15, 
         "structure" -> 14, "models" -> 14, "entanglement" -> 13, "3" -> 13, 
         "chiral" -> 13, "massive" -> 13, "ads" -> 13, "r" -> 12, 
         "cosmological" -> 12, "phase" -> 12, "4" -> 12, "scalar" -> 12, 
         "symmetry" -> 12, "energy" -> 12, "charged" -> 11, "geometry" -> 11, 
         "transition" -> 11, "corrections" -> 11, "effective" -> 11, "uc0" -> 
         11, "symmetries" -> 11|>, 
       "2019-08" -> <|
        "theory" -> 59, "black" -> 54, "quantum" -> 50, "gravity" -> 39, 
         "field" -> 35, "holes" -> 27, "hole" -> 26, "n" -> 25, "model" -> 24,
          "gauge" -> 23, "theories" -> 21, "models" -> 19, "2" -> 18, 
         "holographic" -> 18, "entanglement" -> 17, "string" -> 17, 
         "inflation" -> 16, "energy" -> 15, "scalar" -> 15, "supersymmetric" -> 
         15, "cosmological" -> 14, "topological" -> 14, "spacetime" -> 14, 
         "uc0" -> 14, "geometry" -> 14, "1" -> 13, "entropy" -> 13, 
         "dimensions" -> 12, "states" -> 12, "effective" -> 12, "dark" -> 11, 
         "space" -> 11, "effect" -> 11, "scattering" -> 11, "gravitational" -> 
         11|>, "2019-07" -> <|
        "black" -> 53, "field" -> 49, "quantum" -> 49, "theory" -> 46, 
         "gravity" -> 42, "theories" -> 35, "n" -> 32, "holes" -> 28, 
         "inflation" -> 27, "model" -> 27, "t" -> 25, "entanglement" -> 23, 
         "hole" -> 23, "string" -> 23, "models" -> 21, "dark" -> 20, "scalar" -> 
         20, "gauge" -> 18, "entropy" -> 17, "energy" -> 16, "effective" -> 
         16, "dynamics" -> 15, "2" -> 15, "functions" -> 15, "space" -> 15, 
         "geometry" -> 15, "higher" -> 14, "symmetry" -> 14, "matter" -> 14, 
         "duality" -> 13, "mathcal" -> 13, "holographic" -> 13, "new" -> 13, 
         "higgs" -> 12, "massive" -> 12, "conformal" -> 11, "d" -> 11, "f" -> 
         11, "supergravity" -> 11, "fields" -> 11, "dimensions" -> 11|>, 
       "2019-06" -> <|
        "quantum" -> 65, "black" -> 51, "theory" -> 49, "gravity" -> 46, 
         "field" -> 45, "model" -> 34, "holes" -> 32, "theories" -> 29, "n" -> 
         28, "2" -> 28, "gauge" -> 23, "1" -> 22, "scalar" -> 21, "conformal" -> 
         21, "entanglement" -> 21, "mathcal" -> 19, "ads" -> 19, 
         "holographic" -> 19, "uc0" -> 18, "hole" -> 18, "gravitational" -> 
         18, "states" -> 17, "dark" -> 17, "models" -> 17, "entropy" -> 17, 
         "matter" -> 16, "boundary" -> 15, "inflation" -> 15, "spacetime" -> 
         14, "fields" -> 14, "phase" -> 14, "amplitudes" -> 14, "geometry" -> 
         13, "d" -> 13, "energy" -> 13, "generalized" -> 13, "weak" -> 12, 
         "spin" -> 12, "string" -> 12, "topological" -> 12, "t" -> 11, 
         "dimensions" -> 11, "structure" -> 11, "primordial" -> 11, 
         "symmetry" -> 11, "cosmological" -> 11, "approach" -> 11|>, 
       "2019-05" -> <|
        "gravity" -> 65, "theory" -> 59, "quantum" -> 58, "black" -> 46, 
         "field" -> 39, "n" -> 34, "theories" -> 33, "models" -> 33, 
         "holographic" -> 33, "gravitational" -> 29, "2" -> 29, 
         "entanglement" -> 26, "gauge" -> 26, "fields" -> 24, "holes" -> 23, 
         "dimensions" -> 23, "entropy" -> 22, "hole" -> 21, "symmetry" -> 20, 
         "model" -> 20, "1" -> 20, "uc0" -> 19, "space" -> 19, "topological" -> 
         19, "scalar" -> 17, "conformal" -> 17, "energy" -> 16, "string" -> 
         15, "dark" -> 15, "spin" -> 15, "inflation" -> 15, "effective" -> 14,
          "phase" -> 14, "massive" -> 13, "ads" -> 12, "sitter" -> 12, 
         "matter" -> 12, "qcd" -> 12, "symmetries" -> 12, "3" -> 12, "+1" -> 
         11, "supergravity" -> 11, "functions" -> 11, "dynamical" -> 11, 
         "anomaly" -> 11, "dynamics" -> 11, "extended" -> 11|>, 
       "2019-04" -> <|
        "black" -> 56, "theory" -> 53, "quantum" -> 49, "gravity" -> 47, 
         "field" -> 39, "theories" -> 34, "holes" -> 33, "n" -> 31, 
         "holographic" -> 24, "entanglement" -> 24, "2" -> 22, "model" -> 21, 
         "1" -> 21, "hole" -> 21, "gauge" -> 20, "gravitational" -> 19, 
         "entropy" -> 19, "dimensions" -> 18, "models" -> 18, "spacetime" -> 
         17, "space" -> 17, "geometry" -> 16, "cosmological" -> 15, "fields" -> 
         15, "matter" -> 15, "symmetry" -> 15, "particle" -> 14, "3" -> 14, 
         "scalar" -> 14, "conformal" -> 14, "general" -> 14, "dynamics" -> 14,
          "vacuum" -> 13, "inflation" -> 13, "functions" -> 13, "massive" -> 
         12, "energy" -> 12, "higher" -> 12, "phase" -> 12, "topological" -> 
         12, "constant" -> 11, "generalized" -> 11, "qcd" -> 11, "spin" -> 
         11|>, "2019-03" -> <|
        "theory" -> 62, "quantum" -> 60, "gravity" -> 52, "field" -> 48, 
         "black" -> 45, "model" -> 30, "holes" -> 26, "gravitational" -> 24, 
         "theories" -> 21, "n" -> 21, "string" -> 20, "holographic" -> 20, 
         "gauge" -> 20, "models" -> 19, "phase" -> 19, "scalar" -> 18, "hole" -> 
         17, "ads" -> 15, "2" -> 15, "higher" -> 14, "t" -> 14, "generalized" -> 
         14, "spacetime" -> 13, "entropy" -> 13, "qcd" -> 13, "chiral" -> 13, 
         "geometry" -> 13, "conformal" -> 13, "solutions" -> 13, "fields" -> 
         13, "effective" -> 12, "structure" -> 12, "cosmology" -> 12, 
         "approach" -> 12, "transition" -> 12, "dynamics" -> 12, "background" -> 
         11, "noncommutative" -> 11, "states" -> 11, "functions" -> 11, 
         "energy" -> 11, "massive" -> 11, "spin" -> 11, "sitter" -> 11, 
         "vacuum" -> 11|>, 
       "2019-02" -> <|
        "quantum" -> 47, "gravity" -> 36, "black" -> 32, "theory" -> 31, 
         "holographic" -> 29, "field" -> 24, "model" -> 24, "gauge" -> 19, 
         "holes" -> 19, "entanglement" -> 17, "theories" -> 17, "n" -> 17, 
         "conformal" -> 16, "2" -> 16, "complexity" -> 15, "sitter" -> 14, 
         "inflation" -> 14, "scattering" -> 13, "hole" -> 13, "1" -> 13, "de" -> 
         12, "phase" -> 12, "matter" -> 12, "gravitational" -> 12, 
         "supersymmetric" -> 12, "geometry" -> 11, "dimensions" -> 11, 
         "energy" -> 11, "models" -> 11, "entropy" -> 11|>, 
       "2019-01" -> <|
        "black" -> 53, "quantum" -> 47, "theory" -> 43, "field" -> 36, 
         "gravity" -> 35, "model" -> 28, "holes" -> 27, "scalar" -> 20, 
         "hole" -> 20, "n" -> 18, "theories" -> 17, "gauge" -> 15, "2" -> 15, 
         "uc0" -> 14, "symmetry" -> 13, "holographic" -> 13, "sitter" -> 13, 
         "entropy" -> 12, "scattering" -> 12, "models" -> 12, "matter" -> 12, 
         "solutions" -> 12, "fields" -> 12, "system" -> 11, "phase" -> 11, 
         "topological" -> 11, "inflation" -> 11, "gravitational" -> 11|>, 
       "2018-12" -> <|
        "theory" -> 63, "quantum" -> 57, "gravity" -> 56, "black" -> 52, 
         "field" -> 46, "model" -> 43, "theories" -> 33, "n" -> 31, 
         "holographic" -> 30, "2" -> 28, "gauge" -> 28, "hole" -> 27, 
         "gravitational" -> 25, "conformal" -> 24, "supersymmetric" -> 22, 
         "1" -> 22, "entanglement" -> 20, "holes" -> 20, "models" -> 19, 
         "scalar" -> 19, "string" -> 19, "entropy" -> 18, "energy" -> 17, "4" -> 
         16, "inflation" -> 16, "s" -> 16, "symmetry" -> 16, "higher" -> 16, 
         "mathcal" -> 15, "modes" -> 15, "matter" -> 15, "ads" -> 15, 
         "amplitudes" -> 15, "symmetries" -> 15, "uc0" -> 14, "structure" -> 
         14, "massive" -> 13, "qcd" -> 13, "3" -> 13, "solutions" -> 13, 
         "cosmology" -> 13, "duality" -> 13, "spacetime" -> 13, "r" -> 13, 
         "su" -> 13, "scattering" -> 12, "supergravity" -> 12, "effect" -> 12,
          "times" -> 12, "breaking" -> 11, "thermodynamics" -> 11, 
         "supersymmetry" -> 11, "extended" -> 11, "space" -> 11, "general" -> 
         11, "effective" -> 11, "dark" -> 11, "geometry" -> 11, "via" -> 11, 
         "new" -> 11, "action" -> 11, "functions" -> 11|>, 
       "2018-11" -> <|
        "quantum" -> 65, "theory" -> 58, "gravity" -> 54, "black" -> 46, 
         "field" -> 45, "theories" -> 33, "2" -> 28, "models" -> 28, 
         "holographic" -> 27, "model" -> 26, "holes" -> 23, "hole" -> 22, "n" -> 
         21, "dark" -> 20, "t" -> 18, "energy" -> 18, "matter" -> 18, "gauge" -> 
         18, "ads" -> 17, "entropy" -> 16, "gravitational" -> 16, 
         "entanglement" -> 16, "conformal" -> 14, "topological" -> 14, 
         "inflation" -> 14, "qcd" -> 14, "swampland" -> 13, "chiral" -> 13, 
         "effective" -> 13, "phase" -> 13, "constraints" -> 13, "symmetry" -> 
         13, "uc0" -> 12, "solutions" -> 12, "new" -> 12, "complexity" -> 12, 
         "string" -> 12, "spacetime" -> 11, "amplitudes" -> 11, "generalized" -> 
         11, "scalar" -> 11, "space" -> 11, "geometry" -> 11|>, 
       "2018-10" -> <|
        "quantum" -> 62, "gravity" -> 54, "black" -> 53, "theory" -> 48, 
         "field" -> 37, "theories" -> 34, "gauge" -> 26, "holes" -> 26, 
         "scalar" -> 25, "inflation" -> 23, "n" -> 23, "2" -> 23, "hole" -> 
         22, "holographic" -> 21, "model" -> 21, "string" -> 19, "dimensions" -> 
         19, "symmetry" -> 18, "topological" -> 17, "entropy" -> 17, 
         "conformal" -> 16, "higher" -> 16, "swampland" -> 15, "ads" -> 15, 
         "gravitational" -> 14, "models" -> 14, "entanglement" -> 14, "new" -> 
         14, "chiral" -> 14, "cosmological" -> 14, "fields" -> 13, "systems" -> 
         13, "1" -> 13, "general" -> 12, "space" -> 12, "matter" -> 12, 
         "dimensional" -> 12, "generalized" -> 12, "qcd" -> 12, "effect" -> 
         12, "energy" -> 11, "asymptotic" -> 11, "scattering" -> 11, "dark" -> 
         11, "r" -> 11, "mathcal" -> 11, "strings" -> 11|>, 
       "2018-09" -> <|
        "quantum" -> 50, "theory" -> 50, "field" -> 40, "theories" -> 38, 
         "black" -> 38, "gravity" -> 30, "holes" -> 23, "gauge" -> 23, 
         "models" -> 23, "model" -> 22, "holographic" -> 18, "symmetry" -> 17,
          "string" -> 17, "dark" -> 16, "n" -> 16, "scalar" -> 15, 
         "entanglement" -> 15, "cosmological" -> 15, "qcd" -> 14, "matter" -> 
         14, "energy" -> 13, "vacuum" -> 13, "spin" -> 13, "uc0" -> 13, 
         "inflation" -> 13, "fields" -> 13, "hole" -> 13, "conformal" -> 12, 
         "gravitational" -> 12, "massive" -> 11, "1" -> 11, "systems" -> 11, 
         "ads" -> 11, "higher" -> 11, "corrections" -> 11, "functions" -> 11, 
         "sitter" -> 11, "equation" -> 11|>, 
       "2018-08" -> <|
        "quantum" -> 58, "gravity" -> 53, "black" -> 49, "theory" -> 45, 
         "field" -> 37, "model" -> 27, "theories" -> 26, "hole" -> 26, 
         "holographic" -> 24, "n" -> 23, "holes" -> 22, "gauge" -> 21, 
         "phase" -> 21, "entropy" -> 19, "entanglement" -> 18, "scalar" -> 18,
          "models" -> 17, "2" -> 16, "gravitational" -> 16, "sitter" -> 15, 
         "space" -> 15, "uc0" -> 14, "1" -> 14, "matter" -> 14, "energy" -> 
         14, "fields" -> 14, "de" -> 13, "string" -> 13, "symmetry" -> 13, 
         "systems" -> 12, "functions" -> 11, "magnetic" -> 11, "ads" -> 11, 
         "transitions" -> 11, "dark" -> 11, "dynamics" -> 11, "inflation" -> 
         11, "cosmology" -> 11, "4" -> 11|>, 
       "2018-07" -> <|
        "theory" -> 61, "gravity" -> 48, "field" -> 41, "quantum" -> 38, 
         "black" -> 35, "n" -> 33, "inflation" -> 29, "gauge" -> 27, 
         "theories" -> 23, "model" -> 23, "gravitational" -> 22, "energy" -> 
         20, "2" -> 18, "conformal" -> 17, "holographic" -> 17, "string" -> 
         16, "fields" -> 15, "models" -> 15, "holes" -> 15, "dark" -> 14, 
         "hole" -> 14, "scalar" -> 14, "integrals" -> 14, "uc0" -> 14, 
         "spacetime" -> 13, "sitter" -> 13, "mathcal" -> 13, "vacuum" -> 13, 
         "magnetic" -> 13, "symmetry" -> 13, "chiral" -> 13, "4" -> 12, 
         "entanglement" -> 12, "qcd" -> 12, "dirac" -> 12, "entropy" -> 11, 
         "systems" -> 11, "de" -> 11, "generalized" -> 11, "rotating" -> 11, 
         "geometry" -> 11|>, 
       "2018-06" -> <|
        "quantum" -> 56, "gravity" -> 49, "theory" -> 48, "black" -> 42, 
         "field" -> 34, "model" -> 30, "theories" -> 29, "models" -> 23, 
         "holes" -> 22, "n" -> 20, "gauge" -> 19, "2" -> 19, "cosmology" -> 
         17, "energy" -> 17, "hole" -> 17, "inflation" -> 17, "entanglement" -> 
         16, "holographic" -> 16, "cosmological" -> 16, "entropy" -> 15, 
         "fields" -> 15, "effective" -> 15, "conformal" -> 14, "solutions" -> 
         14, "uc0" -> 14, "1" -> 13, "string" -> 13, "spin" -> 12, 
         "gravitational" -> 12, "supergravity" -> 12, "r" -> 11, "geometry" -> 
         11, "ads" -> 11, "scattering" -> 11, "4" -> 11, "strings" -> 11, "t" -> 
         11|>, "2018-05" -> <|
        "theory" -> 58, "quantum" -> 57, "gravity" -> 45, "field" -> 45, 
         "black" -> 43, "model" -> 32, "n" -> 31, "theories" -> 29, "hole" -> 
         23, "holographic" -> 23, "2" -> 20, "holes" -> 19, "symmetry" -> 19, 
         "conformal" -> 18, "1" -> 18, "models" -> 18, "cosmological" -> 17, 
         "entanglement" -> 17, "gauge" -> 16, "spin" -> 16, "scalar" -> 16, 
         "energy" -> 16, "uc0" -> 15, "entropy" -> 15, "string" -> 15, 
         "matter" -> 14, "massive" -> 14, "fields" -> 13, "vacuum" -> 13, 
         "higher" -> 13, "phase" -> 13, "dark" -> 13, "supersymmetric" -> 13, 
         "gravitational" -> 13, "3" -> 12, "new" -> 12, "times" -> 12, "qcd" -> 
         12, "holography" -> 11, "spacetime" -> 11, "boundary" -> 11, "s" -> 
         11, "scattering" -> 11, "topological" -> 11, "inflation" -> 11, 
         "dimensions" -> 11|>, 
       "2018-04" -> <|
        "gravity" -> 50, "quantum" -> 49, "black" -> 43, "theory" -> 41, "n" -> 
         36, "model" -> 33, "field" -> 33, "theories" -> 27, "holographic" -> 
         25, "holes" -> 22, "gauge" -> 21, "models" -> 20, "hole" -> 19, "2" -> 
         18, "4" -> 18, "cosmological" -> 16, "gravitational" -> 16, 
         "mathcal" -> 16, "geometry" -> 15, "conformal" -> 15, "1" -> 14, 
         "topological" -> 14, "functions" -> 14, "scalar" -> 14, "effective" -> 
         13, "dark" -> 13, "space" -> 13, "symmetry" -> 13, "dimensions" -> 
         13, "entanglement" -> 13, "energy" -> 12, "inflation" -> 12, "uc0" -> 
         11, "magnetic" -> 11, "fields" -> 11, "structure" -> 11, "entropy" -> 
         11, "higher" -> 11|>, 
       "2018-03" -> <|
        "quantum" -> 50, "theory" -> 49, "field" -> 45, "gravity" -> 43, 
         "black" -> 41, "theories" -> 32, "n" -> 26, "hole" -> 22, "model" -> 
         21, "gauge" -> 21, "models" -> 21, "symmetry" -> 20, "holographic" -> 
         19, "entanglement" -> 18, "fields" -> 18, "effective" -> 17, "1" -> 
         15, "2" -> 15, "holes" -> 15, "energy" -> 14, "inflation" -> 13, 
         "string" -> 13, "gravitational" -> 12, "supergravity" -> 12, 
         "massive" -> 12, "functions" -> 11, "matter" -> 11, "dark" -> 11|>, 
       "2018-02" -> <|
        "theory" -> 48, "quantum" -> 46, "gravity" -> 43, "field" -> 42, 
         "model" -> 32, "black" -> 29, "theories" -> 28, "n" -> 28, "gauge" -> 
         24, "holographic" -> 19, "conformal" -> 18, "scalar" -> 18, "models" -> 
         18, "holes" -> 17, "2" -> 16, "spin" -> 14, "topological" -> 14, 
         "dimensions" -> 13, "matter" -> 13, "dynamics" -> 13, "4" -> 12, 
         "symmetry" -> 12, "gravitational" -> 12, "entanglement" -> 12, "ads" -> 
         11, "group" -> 11, "hole" -> 11, "inflation" -> 11, "dark" -> 11|>, 
       "2018-01" -> <|
        "quantum" -> 45, "theory" -> 39, "black" -> 38, "gravity" -> 33, 
         "field" -> 32, "model" -> 28, "2" -> 26, "theories" -> 23, "models" -> 
         22, "n" -> 21, "hole" -> 20, "gauge" -> 18, "holes" -> 18, 
         "inflation" -> 15, "uc0" -> 15, "dark" -> 15, "string" -> 14, 
         "topological" -> 14, "matter" -> 14, "holographic" -> 14, "1" -> 13, 
         "gravitational" -> 13, "4" -> 13, "cosmological" -> 13, "energy" -> 
         13, "equation" -> 12, "spin" -> 12, "solutions" -> 12, "scalar" -> 
         12, "dimensions" -> 11, "entanglement" -> 11, "conformal" -> 11, 
         "dirac" -> 11, "fields" -> 11|>, 
       "2017-12" -> <|
        "quantum" -> 63, "theory" -> 62, "black" -> 52, "gravity" -> 50, "n" -> 
         36, "theories" -> 35, "field" -> 35, "model" -> 33, "2" -> 31, 
         "gauge" -> 29, "symmetry" -> 26, "models" -> 26, "holographic" -> 25,
          "hole" -> 23, "holes" -> 23, "entanglement" -> 21, "higher" -> 20, 
         "inflation" -> 20, "gravitational" -> 18, "fields" -> 18, 
         "supersymmetric" -> 18, "functions" -> 16, "spin" -> 16, "conformal" -> 
         16, "energy" -> 16, "string" -> 16, "phase" -> 15, "generalized" -> 
         15, "qcd" -> 15, "scattering" -> 15, "ads" -> 14, "supergravity" -> 
         14, "dark" -> 14, "uc0" -> 14, "cosmological" -> 14, "dimensions" -> 
         13, "large" -> 13, "1" -> 13, "space" -> 12, "structure" -> 12, 
         "massive" -> 12, "chiral" -> 12, "breaking" -> 12, "vacuum" -> 12, 
         "higgs" -> 11, "dynamics" -> 11, "entropy" -> 11, "spacetime" -> 11, 
         "amplitudes" -> 11, "dimensional" -> 11, "equations" -> 11, "matter" -> 
         11, "scalar" -> 11|>, 
       "2017-11" -> <|
        "theory" -> 67, "quantum" -> 65, "black" -> 55, "gravity" -> 52, 
         "field" -> 44, "model" -> 39, "theories" -> 36, "conformal" -> 28, 
         "holes" -> 27, "n" -> 27, "hole" -> 24, "inflation" -> 24, "gauge" -> 
         23, "scalar" -> 22, "ads" -> 22, "fields" -> 22, "symmetry" -> 20, 
         "space" -> 20, "phase" -> 20, "dimensions" -> 18, "models" -> 18, 
         "uc0" -> 18, "cosmological" -> 17, "solutions" -> 17, "holographic" -> 
         17, "r" -> 16, "new" -> 16, "gravitational" -> 16, "dimensional" -> 
         16, "2" -> 16, "scattering" -> 16, "1" -> 15, "entropy" -> 15, 
         "massive" -> 15, "higher" -> 15, "string" -> 14, "energy" -> 14, 
         "supersymmetric" -> 14, "amplitudes" -> 13, "spacetime" -> 13, 
         "matter" -> 13, "dark" -> 13, "structure" -> 13, "entanglement" -> 
         13, "cft" -> 13, "charged" -> 12, "dynamics" -> 12, "functions" -> 
         12, "duality" -> 12, "3" -> 12, "spin" -> 12, "topological" -> 12, 
         "geometry" -> 11, "coupling" -> 11, "chern-simons" -> 11, 
         "supergravity" -> 11, "background" -> 11|>, 
       "2017-10" -> <|
        "quantum" -> 53, "gravity" -> 46, "theory" -> 43, "black" -> 36, 
         "theories" -> 32, "holographic" -> 31, "field" -> 28, "gauge" -> 28, 
         "model" -> 22, "n" -> 22, "hole" -> 19, "2" -> 18, "inflation" -> 17,
          "holes" -> 17, "supersymmetric" -> 16, "models" -> 16, "ads" -> 15, 
         "entanglement" -> 14, "higher" -> 14, "conformal" -> 14, "approach" -> 
         13, "matter" -> 13, "lattice" -> 13, "symmetry" -> 13, 
         "gravitational" -> 12, "entropy" -> 12, "spin" -> 12, "vacuum" -> 12,
          "string" -> 11, "energy" -> 11, "cosmological" -> 11|>, 
       "2017-09" -> <|
        "quantum" -> 56, "theory" -> 49, "gravity" -> 41, "black" -> 30, 
         "model" -> 27, "field" -> 27, "entanglement" -> 22, "theories" -> 22,
          "models" -> 20, "gauge" -> 20, "cosmological" -> 19, "effective" -> 
         18, "holes" -> 18, "conformal" -> 16, "entropy" -> 16, "string" -> 
         15, "new" -> 15, "inflation" -> 14, "matter" -> 14, "gravitational" -> 
         14, "dark" -> 13, "symmetry" -> 13, "holographic" -> 13, "higher" -> 
         13, "generalized" -> 12, "n" -> 12, "fields" -> 12, "space" -> 12, 
         "uc0" -> 12, "asymptotic" -> 11, "hole" -> 11, "massive" -> 11, 
         "approach" -> 11, "states" -> 11, "topological" -> 11, "spin" -> 
         11|>, "2017-08" -> <|
        "gravity" -> 39, "field" -> 38, "theory" -> 38, "black" -> 36, 
         "quantum" -> 35, "model" -> 29, "holographic" -> 21, "theories" -> 
         20, "string" -> 19, "hole" -> 19, "models" -> 17, "gauge" -> 16, 
         "dimensions" -> 16, "gravitational" -> 15, "n" -> 15, "solutions" -> 
         14, "space" -> 14, "holography" -> 13, "vacuum" -> 13, "sitter" -> 
         13, "inflation" -> 13, "spin" -> 12, "entanglement" -> 12, "holes" -> 
         12, "uc0" -> 12, "conformal" -> 12, "fields" -> 12, "boundary" -> 12,
          "cosmological" -> 11, "geometry" -> 11, "symmetry" -> 11, 
         "topological" -> 11, "ads" -> 11, "2" -> 11|>, 
       "2017-07" -> <|
        "quantum" -> 45, "black" -> 41, "theory" -> 35, "gravity" -> 33, 
         "model" -> 30, "field" -> 24, "theories" -> 24, "holes" -> 23, "n" -> 
         23, "conformal" -> 20, "holographic" -> 19, "hole" -> 17, 
         "inflation" -> 17, "2" -> 16, "uc0" -> 16, "gauge" -> 16, 
         "topological" -> 15, "gravitational" -> 15, "entanglement" -> 14, 
         "symmetry" -> 14, "dark" -> 14, "matter" -> 13, "3" -> 12, "entropy" -> 
         11, "dimensions" -> 11, "fields" -> 11, "energy" -> 11, "models" -> 
         11, "magnetic" -> 11, "waves" -> 11|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[78.4], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            TypeSystem`PackageScope`AtomShape[34]]], 2, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 75], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[78.4], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
            TypeSystem`PackageScope`AtomShape[34]]], 2, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 75], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     75, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2023-09", 
                  Style[
                  "2023-09", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-09"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-09"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-09"], 
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-09"], 
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-09"], 
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["theory", 
                  Style[
                  "theory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-09"], 
                    Key["theory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-09"], 
                 Key["theory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-09"], 
                 Key["theory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["29 total \:203a ", ""], 
                  Style[
                   Superscript["29 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-09"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-09"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2023-08", 
                  Style[
                  "2023-08", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-08"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-08"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-08"], 
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-08"], 
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-08"], 
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["gravity", 
                  Style[
                  "gravity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-08"], 
                    Key["gravity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-08"], 
                 Key["gravity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-08"], 
                 Key["gravity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["34 total \:203a ", ""], 
                  Style[
                   Superscript["34 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-08"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-08"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2023-07", 
                  Style[
                  "2023-07", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-07"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-07"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["black", 
                  Style[
                  "black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-07"], 
                    Key["black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-07"], 
                 Key["black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-07"], 
                 Key["black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-07"], 
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-07"], 
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["68"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-07"], 
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["51 total \:203a ", ""], 
                  Style[
                   Superscript["51 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-07"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-07"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2023-06", 
                  Style[
                  "2023-06", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-06"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-06"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-06"], 
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-06"], 
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["63"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-06"], 
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["black", 
                  Style[
                  "black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-06"], 
                    Key["black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-06"], 
                 Key["black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-06"], 
                 Key["black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["46 total \:203a ", ""], 
                  Style[
                   Superscript["46 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-06"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-06"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2023-05", 
                  Style[
                  "2023-05", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-05"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-05"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["theory", 
                  Style[
                  "theory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-05"], 
                    Key["theory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-05"], 
                 Key["theory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-05"], 
                 Key["theory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-05"], 
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-05"], 
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["69"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-05"], 
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["46 total \:203a ", ""], 
                  Style[
                   Superscript["46 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-05"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-05"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2023-04", 
                  Style[
                  "2023-04", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-04"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-04"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["black", 
                  Style[
                  "black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-04"], 
                    Key["black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-04"], 
                 Key["black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["65"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-04"], 
                 Key["black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-04"], 
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-04"], 
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-04"], 
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["45 total \:203a ", ""], 
                  Style[
                   Superscript["45 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-04"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-04"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2023-03", 
                  Style[
                  "2023-03", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-03"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-03"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["black", 
                  Style[
                  "black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-03"], 
                    Key["black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-03"], 
                 Key["black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-03"], 
                 Key["black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-03"], 
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-03"], 
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["70"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-03"], 
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["47 total \:203a ", ""], 
                  Style[
                   Superscript["47 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-03"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-03"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2023-02", 
                  Style[
                  "2023-02", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-02"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-02"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-02"], 
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-02"], 
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["75"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-02"], 
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["black", 
                  Style[
                  "black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-02"], 
                    Key["black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-02"], 
                 Key["black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-02"], 
                 Key["black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["29 total \:203a ", ""], 
                  Style[
                   Superscript["29 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-02"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-02"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2023-01", 
                  Style[
                  "2023-01", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-01"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-01"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-01"], 
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-01"], 
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["67"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-01"], 
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["black", 
                  Style[
                  "black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-01"], 
                    Key["black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-01"], 
                 Key["black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["58"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-01"], 
                 Key["black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["31 total \:203a ", ""], 
                  Style[
                   Superscript["31 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2023-01"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2023-01"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2022-12", 
                  Style[
                  "2022-12", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2022-12"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2022-12"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2022-12"], 
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2022-12"], 
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["106"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2022-12"], 
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["theory", 
                  Style[
                  "theory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2022-12"], 
                    Key["theory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2022-12"], 
                 Key["theory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["87"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2022-12"], 
                 Key["theory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["70 total \:203a ", ""], 
                  Style[
                   Superscript["70 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["2022-12"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["2022-12"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[True, 75, 1], {1, 75 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[False, 75, 1], {1, 75 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[75, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[75, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 75, 1], {1, 75 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 75, 1], {1, 75 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{270., {387.134033203125, 392.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{270., {387.134033203125, 392.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9051660764199877`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"d73faf20-975d-45ac-a575-cbdf559812fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsPopularWordsFrequencies", "=", 
  RowBox[{"Dataset", "@", 
   RowBox[{"ReverseSort", "@", 
    RowBox[{"Association", "@", 
     RowBox[{"KeyValueMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "->", 
         RowBox[{"Total", "[", "#2", "]"}]}], "&"}], ",", 
       RowBox[{"GroupBy", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Normal", "/@", 
           RowBox[{"Values", "@", "popularWords"}]}], "]"}], ",", 
         RowBox[{"First", "->", "Last"}]}], "]"}]}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.905149664563993*^9, 3.90514967064397*^9}, {
  3.905149762380872*^9, 3.9051497988467283`*^9}, {3.905149992864173*^9, 
  3.905149996098144*^9}, {3.905150035069393*^9, 3.905150095433794*^9}, {
  3.905150275845168*^9, 3.9051502761990013`*^9}, {3.905150435225348*^9, 
  3.905150464871834*^9}, {3.90515049710798*^9, 3.905150509769031*^9}, {
  3.905150761897606*^9, 3.905150776599576*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"a9f21216-928b-4421-b299-fd7f31416377"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "quantum" -> 4601, "black" -> 4031, "theory" -> 3921, "gravity" -> 3794,
        "field" -> 2907, "model" -> 2228, "holes" -> 2160, "theories" -> 2101,
        "n" -> 1827, "hole" -> 1706, "gauge" -> 1649, "holographic" -> 1484, 
       "models" -> 1438, "gravitational" -> 1407, "2" -> 1388, "symmetry" -> 
       1177, "entanglement" -> 1162, "scalar" -> 1101, "string" -> 1066, 
       "dark" -> 1011, "inflation" -> 1007, "conformal" -> 969, "matter" -> 
       944, "energy" -> 897, "uc0" -> 877, "fields" -> 863, "entropy" -> 854, 
       "cosmological" -> 738, "topological" -> 680, "ads" -> 672, "space" -> 
       670, "phase" -> 647, "effective" -> 635, "1" -> 605, "dimensions" -> 
       564, "spin" -> 539, "dynamics" -> 464, "t" -> 461, "spacetime" -> 447, 
       "higher" -> 430, "scattering" -> 427, "geometry" -> 390, "symmetries" -> 
       381, "sitter" -> 378, "qcd" -> 367, "generalized" -> 361, "massive" -> 
       346, "4" -> 335, "mathcal" -> 325, "amplitudes" -> 301, "cosmology" -> 
       291, "functions" -> 286, "new" -> 282, "chiral" -> 280, "solutions" -> 
       247, "states" -> 245, "structure" -> 218, "3" -> 208, "supersymmetric" -> 
       192, "vacuum" -> 187, "r" -> 176, "approach" -> 174, "de" -> 171, 
       "systems" -> 165, "supergravity" -> 161, "general" -> 160, "magnetic" -> 
       159, "holography" -> 150, "charged" -> 147, "boundary" -> 144, 
       "primordial" -> 119, "effect" -> 114, "duality" -> 112, "waves" -> 109,
        "equations" -> 106, "strings" -> 104, "d" -> 100, "classical" -> 84, 
       "higgs" -> 84, "yang-mills" -> 80, "particle" -> 77, "mass" -> 69, 
       "cosmic" -> 69, "effects" -> 63, "f" -> 61, "lattice" -> 59, 
       "thermodynamics" -> 58, "large" -> 58, "anomaly" -> 56, "via" -> 56, 
       "+1" -> 51, "dimensional" -> 50, "modes" -> 49, "dynamical" -> 48, 
       "group" -> 48, "times" -> 46, "transition" -> 45, "s" -> 39, 
       "complexity" -> 38, "su" -> 37, "constraints" -> 37, "tensor" -> 36, 
       "3d" -> 36, "breaking" -> 35, "finite" -> 35, "order" -> 35, "dirac" -> 
       34, "universe" -> 34, "double" -> 34, "bar" -> 31, "swampland" -> 28, 
       "integrals" -> 27, "4d" -> 26, "wave" -> 26, "cft" -> 25, "critical" -> 
       25, "physics" -> 25, "potential" -> 25, "matrix" -> 24, 
       "renormalization" -> 24, "local" -> 24, "equation" -> 23, "weak" -> 23,
        "operator" -> 23, "deformed" -> 23, "asymptotic" -> 22, "background" -> 
       22, "extended" -> 22, "corrections" -> 22, "mathbb" -> 22, "loop" -> 
       22, "coupled" -> 22, "limit" -> 22, "temperature" -> 22, "action" -> 
       22, "white" -> 20, "paper" -> 19, "particles" -> 18, "review" -> 18, 
       "snowmass" -> 18, "censorship" -> 16, "sagex" -> 16, "chapter" -> 15, 
       "conjecture" -> 14, "mechanics" -> 14, "function" -> 12, "novel" -> 12,
        "einstein-gauss-bonnet" -> 12, "flat" -> 12, "state" -> 12, "beyond" -> 
       12, "formalism" -> 12, "chern-simons" -> 11, "coupling" -> 11, 
       "rotating" -> 11, "transitions" -> 11, "supersymmetry" -> 11, "system" -> 
       11, "noncommutative" -> 11, "constant" -> 11, "trans-planckian" -> 11, 
       "operators" -> 11, "super" -> 11, "fermions" -> 11, "algebra" -> 11, 
       "algebras" -> 11, "flow" -> 11, "modified" -> 11, "spacetimes" -> 11, 
       "using" -> 11, "nanograv" -> 11|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[134.4], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 171], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[134.4], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 171], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 171, 
     "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantum", 
                  Style[
                  "quantum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["quantum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["quantum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4601"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["quantum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["black", 
                  Style[
                  "black", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["black"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["black"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4031"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["black"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["theory", 
                  Style[
                  "theory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["theory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["theory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3921"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["theory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["gravity", 
                  Style[
                  "gravity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["gravity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["gravity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3794"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["gravity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["field", 
                  Style[
                  "field", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["field"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["field"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2907"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["field"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["model", 
                  Style[
                  "model", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["model"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["model"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2228"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["model"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["holes", 
                  Style[
                  "holes", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["holes"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["holes"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2160"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["holes"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["theories", 
                  Style[
                  "theories", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["theories"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["theories"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["theories"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["n"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["n"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1827"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hole", 
                  Style[
                  "hole", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["hole"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["hole"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1706"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["hole"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["gauge", 
                  Style[
                  "gauge", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["gauge"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["gauge"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1649"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["gauge"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["holographic", 
                  Style[
                  "holographic", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["holographic"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["holographic"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1484"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["holographic"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["models", 
                  Style[
                  "models", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["models"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["models"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1438"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["models"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["gravitational", 
                  Style[
                  "gravitational", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["gravitational"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["gravitational"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1407"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["gravitational"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["2", 
                  Style[
                  "2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1388"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["symmetry", 
                  Style[
                  "symmetry", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["symmetry"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["symmetry"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["symmetry"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["entanglement", 
                  Style[
                  "entanglement", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["entanglement"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["entanglement"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1162"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["entanglement"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["scalar", 
                  Style[
                  "scalar", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["scalar"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["scalar"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["scalar"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["string", 
                  Style[
                  "string", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["string"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["string"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1066"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["string"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["dark", 
                  Style[
                  "dark", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][{
                    Key["dark"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["dark"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1011"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "6bdab2db-638d-46d6-93b9-58e0640f98fe"][{
                 Key["dark"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 171, 1], {1, 171 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 171, 1], {1, 171 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[171, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[171, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"}, "Rows", 1, {}]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"}, "Rows", 10, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"}, "Rows", 30, {}]],
                     MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"}, "Rows", 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"}, "Rows", 
                    100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 171, 1], {1, 171 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 171, 1], {1, 171 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "6bdab2db-638d-46d6-93b9-58e0640f98fe", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "6bdab2db-638d-46d6-93b9-58e0640f98fe"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "6bdab2db-638d-46d6-93b9-58e0640f98fe"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{205., {287.134033203125, 292.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{205., {287.134033203125, 292.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.905150449748579*^9, 3.905150465222889*^9}, {
   3.905150497712302*^9, 3.905150510157123*^9}, 3.9051506290929403`*^9, 
   3.9051507771226397`*^9, 3.905166082301231*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"10ccfa35-c49e-4e8f-a69b-e6458349adb9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WordCloud video", "Subsection",
 CellChangeTimes->{{3.905159460574926*^9, 
  3.905159493453573*^9}},ExpressionUUID->"5ef5802f-e00d-4776-88de-\
6d68fd85248b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wordCloudTitlesMonths", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"WordCloud", "[", 
      RowBox[{
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{"titlesMonths", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<\\n\>\""}], "]"}], ",", 
       RowBox[{"Disk", "[", "]"}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
          "\"\<arXiv [hep-th]\>\"", "<>", "\"\<\\n\>\"", "<>", 
           "\"\<article title words\>\"", "<>", "\"\<\\n\>\"", "<>", 
           RowBox[{
            RowBox[{"Keys", "[", "titlesMonths", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "<>", "\"\<\\n\>\""}], ",", "22", 
          ",", "LightBlue"}], "]"}]}], ",", 
       RowBox[{"ScalingFunctions", "->", "\"\<Log\>\""}], ",", 
       RowBox[{"PlotTheme", "->", "\"\<NeonColor\>\""}], ",", 
       RowBox[{"Background", "->", 
        RowBox[{"GrayLevel", "[", ".2", "]"}]}], ",", 
       RowBox[{"ImageSize", "->", 
        RowBox[{"{", 
         RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "[", "titlesMonths", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9051379821083393`*^9, 3.905138011841743*^9}, {
  3.9051393302148438`*^9, 3.905139381820238*^9}, {3.905139449711925*^9, 
  3.90513948402481*^9}, {3.9051395647130957`*^9, 3.905139571138557*^9}, {
  3.905139714602927*^9, 3.9051397262956953`*^9}, {3.905139818189701*^9, 
  3.905139840032091*^9}, {3.905139916083523*^9, 3.905139967965507*^9}, {
  3.905140039846476*^9, 3.9051401044792223`*^9}, {3.9051401618412848`*^9, 
  3.905140256041662*^9}, {3.905140334863188*^9, 3.905140336743313*^9}, {
  3.905140453332687*^9, 3.9051404696100492`*^9}, {3.905140761509096*^9, 
  3.9051408334713287`*^9}, {3.9051438435864553`*^9, 3.9051438479833517`*^9}, {
  3.9051439315937767`*^9, 3.905143963121972*^9}, {3.90514410757656*^9, 
  3.905144108064303*^9}, {3.9051446179823637`*^9, 3.9051446181475067`*^9}},
 CellLabel->
  "In[432]:=",ExpressionUUID->"7b29e0a6-6b65-4aad-afe0-17941d43ee53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wordCloudTitlesVideo", "=", 
  RowBox[{"SlideShowVideo", "[", 
   RowBox[{
    RowBox[{"Reverse", "[", "wordCloudTitlesMonths", "]"}], ",", 
    RowBox[{"DefaultDuration", "->", "45"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9051405592813997`*^9, 3.905140608951386*^9}, {
  3.905140656294065*^9, 3.9051406609815598`*^9}},
 CellLabel->
  "In[434]:=",ExpressionUUID->"6f0a99b7-5365-484e-8428-2104c2f04b02"],

Cell[BoxData[
 TemplateBox[<|"opts" -> Sequence[
     RowBox[{"AudioOutputDevice", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AudioTrackSelection", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
     RowBox[{"SubtitleTrackSelection", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
     RowBox[{"VideoTrackSelection", "\[Rule]", 
       RowBox[{"{", "1", "}"}]}]], "resourcePath" -> 
   "/Users/MacDan/Documents/Wolfram/Video/SlideShowVideo-2023-10-01T12-25-10.\
mp4", "appearance" -> "Basic", "position" -> 0., "currentVideoTrack" -> 1, 
   "currentAudioTrack" -> 0, "currentSubtitleTrack" -> 0, "volume" -> 1, 
   "audioDevice" -> Automatic, "currentRasterSize" -> {554, 554}, 
   "imageSizeOption" -> Automatic, "cachedFrame" -> {
     ByteArray[CompressedData["
1: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
HL8Kxup5xZoEU8dZXVEpZanXjSGxZW+bR5jdBF5sCGzJKAfrNKPg+P6cDKtz
BBkjUzMX9wDp6iYD/9iDPZVAeteTH45eJeQUVRPJAtVlZdi9sRQPTXk3utb/
KdD/X6X/J+PFXyWUM6ogVsk6jU9MJ6ZC5TGzlzRMIXr1Kys52yzto3rwj7mT
p1Giosf92dQWejuo+biTPrIou9cJF4MvnT++spnFKdjPKHQfmUAYbp0oP6UV
zd7Ud4wwykilgn01lHViVOSI0Nka6hV74H4Mo9jblbeLrYYMfGyeRKXpU2lk
+awDZF4uzSGdDDUrm7L6IkIaFYSY0+MHv1QEGXZNI7BSsH+YHvqv3vjpfdVM
auBxtGzb/Gwi2btKKiYbrygJ8rzLoR2s4GLTWgQ8xJleutQ50XesT0+o+M0C
f8XAekHolTQS6FiyffXVDJ/J8R5gz+QiG5ywl9AttZdEpPbd8vuGV3JAQ2bN
W75zGOt+6c+Fm4Wa2gXlXYkmOYO14e5uEc/lB3rWUxbiq6bFlRF6Do/cJ0g1
TwPkJNZ/OdmSkzzvTcFz2Yv3owtF3AO+uestUQWEfux9ShNN4Jd+0+S/Wqby
vD+XndMQc3qXMFx5xiQiODVf1/xvHJuqYO8C/UXf7Yn+Hsl43Pl/E9QBxwTn
IvtgzNywBF+A3wt1FXoezrO6r8uqkNyQbuIDnM0RiL+2WkwhPn1Nmh7ZtTdE
lP5tmfjaUr5oeyJ0ydtLr2XI6JCmchgUFe1cnl+FXuLvvPquKe/0PMebWPr2
mBB4eqVdkKzc8H1eQv0l6i3VZ7eAGN3asUMsd0jn+XACjZtS78jH2NwjJCct
T/u0sok66ISSGVzRRv/4duTyzlPnz+l6EuJtqu3pkadTTaoqtKx/Lqj1RKDU
egJ+rF7znhPD+/oZajAzbLGaWy2kwAR/5nCjzucy9vULLfU6IcNV8LPNbm3S
UrQ3hwCFHj/nNc3pP/PzA1l7efP/bHRR2h6qNNCINxr1n0ao/S6AJYKdr+4B
pogsUMiG9WFgd1lWSev4knwhO9lFqUF/EI6dGH3WNkf1QnPS4xJq/x2IHTP4
IWNkbrP7LUeJvglyZDamqjnI7K3FwqWmO2LRoLh6qKoSd5lc7kHeXl+XfB52
uki6XfkY3b2Z6567m9jly70/ho3mNCz9kCmBu83BrahXE/Ribqm1Wyn3acMz
2eVjsVIguODzazhrtOh8yPeYjkm/ieVQ+eMD09kNFMljSeLSoIYswzrLzYX9
pPogwY8uV8ctcncVgpuZKg0SawIDPCcvwsvm1zPVTR27q6XTCgUciU1/zfOX
X4lFn1HQ+yOUI/3NsFIBDGFqiWP62T5f07N7B17Eik8FmAGTVRtSPgjg2wQU
cRZ1BEpxmNg5cHLKmNAn5FX8itxa4OYxq68dr86hHRrCGCw8xmc7jipZq+2S
LZjX1/eJZE/0Fo5I2BQ/uVDalrAt7MnbJelkie33io4OfZFO5QVDAAuXugCx
CtG1JPw8Xg/9spSD9JNSsziaDnfZVqznEGUNxFWR0MGUS8mh2fMhcIbWyN3L
t6jLpe2WpbmgrUxxKykn8WvVZNVJCqATX41BZI4ng9KDnXRvuu+pAz1vfn5q
wLEJAbQrEAa4aqpVFeVDYlfEqUS4zyuuJXoZj6gWGlYfCAjv033LXHBSUfax
nqp2Wr1mwH9tlO5Ot7n8ZVp0yLIGVshM526gVmklEW1HcVZ0GjUQ5ZVKgZWf
1Co/tJhTe3fY89G2qgO9nqg1a3bo2Kmby40sEbKuNgHf/Dg7ced9nMj+2lo7
bkImRD7n9V1Py1PwebcvsVRFQB5b30IPa1IsG7kI2Xmca4F9nGNs+jztOHFz
diZspIcmSYmE2c79P1c4M/ziwaK7V4dXu05hW/lvfaGVY6Y/TkOqmlA1ZHrX
fby++cc/dltPRz6CTDZznFxfcolbkx1sce3uu55SthbyCO7tKXUmk/3+EBYz
/O3ZhH7uv0rBvXE8PXhtKoLdovazrZtPqxtjFTvhNGDxNxp7tTVl6o9RSaIK
dg7Pkb3GOCpVFzE1NCasxOpDZlLMnbFiYsvnTGhEzVhpdxI0qNCsqd64gVlO
lOBHWxuXm9TfknqFtPy+PCci7uNV/mKWaz5wVEsYzdbmKdZYYPA16WDZWc1I
CQr8Uarq0P8fLrmzC+kjD7EHYGfLb3LAJ5Sx+1dJHyubM/tXjdqgm+/Z7NcJ
CMepi7fQ5QZ/A9Gb3au3Z3y06S9/DPxQM/AnFphMxJW6OvrwB0ge+iYRo+H7
zzit9D/6zHuti0n5WUW2lMn3jx2Csy59HyI5F/jzh0uT9IW+k2katRuLzgDF
6PLOioJQaddaSxpk2yyxb7lD18IulUZQpEF3L9IoINzmDeiHKl7hY4ytQOqW
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

      "]], "JPEG"}, 
   "properties" -> <|
    "duration" -> 45., 
     "trackDescriptors" -> <|
      "Video" -> {1 -> "Track 1"}, "Audio" -> {}, "Subtitle" -> {}|>, 
     "originalRasterSizes" -> {{1200, 1200}}, "rasterSizeOption" -> Automatic,
      "fileSize" -> 21566818|>, "version" -> 2, "form" -> StandardForm|>,
  "VideoBox2",
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.905140643689609*^9, 3.905140703217949*^9, 
  3.905140920253443*^9, 3.905144302044359*^9, 3.905144792855906*^9},
 CellLabel->
  "Out[434]=",ExpressionUUID->"8856f4ee-ce04-497f-9a4c-b9d9af1a3585"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1164, 841},
WindowMargins->{{Automatic, 51}, {Automatic, 0}},
TaggingRules-><|"ChatNotebookSettings" -> <|"Assistance" -> True|>|>,
FrontEndVersion->"13.3 for Mac OS X x86 (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"029365bb-73a9-4dba-9b0a-63b81e086628"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 98, "Title",ExpressionUUID->"dbfc701f-0998-49af-b12b-d3b30df1fa1d"],
Cell[745, 27, 157, 3, 31, "Author",ExpressionUUID->"72034f4a-dd92-428f-8a05-aa82107ed731"],
Cell[CellGroupData[{
Cell[927, 34, 278, 4, 67, "Section",ExpressionUUID->"73579128-63c0-4c61-8794-cf9b6f63d9b6"],
Cell[CellGroupData[{
Cell[1230, 42, 164, 3, 54, "Subsection",ExpressionUUID->"e72c69e5-9a39-4d9c-857e-a707504e5398"],
Cell[1397, 47, 2242, 56, 194, "Input",ExpressionUUID->"262cf7df-81d2-4a65-97e6-9d80608995ef",
 InitializationCell->True],
Cell[3642, 105, 3537, 91, 173, "Input",ExpressionUUID->"503dade2-531a-419b-b596-efe3a951a173",
 InitializationCell->True],
Cell[7182, 198, 2242, 62, 136, "Input",ExpressionUUID->"f17af88a-2fc7-449f-a015-489561da550e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9461, 265, 169, 3, 54, "Subsection",ExpressionUUID->"675c3d2d-ed1f-4662-b74a-a97c1a4dc65a"],
Cell[9633, 270, 1252, 31, 115, "Input",ExpressionUUID->"040548c8-a491-4f30-bb39-762a7d99aa08"],
Cell[CellGroupData[{
Cell[10910, 305, 212, 3, 30, "Input",ExpressionUUID->"aaf10999-0f92-4081-8965-25a142383886"],
Cell[11125, 310, 214284, 3671, 799, "Output",ExpressionUUID->"d73faf20-975d-45ac-a575-cbdf559812fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225446, 3986, 1049, 22, 52, "Input",ExpressionUUID->"a9f21216-928b-4421-b299-fd7f31416377"],
Cell[226498, 4010, 76157, 1440, 599, "Output",ExpressionUUID->"10ccfa35-c49e-4e8f-a69b-e6458349adb9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[302704, 5456, 163, 3, 54, "Subsection",ExpressionUUID->"5ef5802f-e00d-4776-88de-6d68fd85248b"],
Cell[302870, 5461, 2212, 46, 115, "Input",ExpressionUUID->"7b29e0a6-6b65-4aad-afe0-17941d43ee53"],
Cell[CellGroupData[{
Cell[305107, 5511, 432, 9, 30, "Input",ExpressionUUID->"6f0a99b7-5365-484e-8428-2104c2f04b02"],
Cell[305542, 5522, 70487, 1162, 607, "Output",ExpressionUUID->"8856f4ee-ce04-497f-9a4c-b9d9af1a3585"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

